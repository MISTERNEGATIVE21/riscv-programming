<div id="pf46" class="pf w0 h0" data-page-no="46"><div class="pc pc46 w0 h0"><img class="bi x13 y194 w2 h20" alt="" src="bg46.png"/><div class="t m0 x13 h7 y15a ff3 fs4 fc0 sc0 ls0 ws0">CHAPTER<span class="_ _2"> </span>6.<span class="_ _22"> </span>THE<span class="_ _2"> </span>R<span class="_ _2c"></span>V32I<span class="_ _2"> </span>ISA</div><div class="t m0 x13 h7 y38 ff3 fs4 fc0 sc0 ls0 ws0">w<span class="_ _1"></span>ords, to<span class="_ _5"> </span>read/write a v<span class="_ _8"></span>alue from/to<span class="_ _5"> </span>memory<span class="_ _7"></span>, the<span class="_ _5"> </span>softw<span class="_ _8"></span>are must execute a load/store</div><div class="t m0 x13 h7 yed ff3 fs4 fc0 sc0 ls0 ws0">instruction.</div><div class="t m0 x14 h7 yc1e ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _f"> </span>RISC-V<span class="_ _f"> </span>is<span class="_ _f"> </span>a<span class="_ _11"> </span>Load/Store<span class="_ _f"> </span>arc<span class="_ _1"></span>hitecture,<span class="_ _11"> </span>hence,<span class="_ _e"> </span>to<span class="_ _f"> </span>p<span class="_ _4"></span>erform<span class="_ _c"> </span>op<span class="_ _4"></span>erations<span class="_ _f"> </span>(<span class="ff8">e.g.</span>,</div><div class="t m0 x13 h7 yc1f ff3 fs4 fc0 sc0 ls0 ws0">arithmetic<span class="_ _c"> </span>op<span class="_ _4"></span>erations)<span class="_ _c"> </span>on<span class="_ _c"> </span>data<span class="_ _c"> </span>stored<span class="_ _f"> </span>on<span class="_ _c"> </span>memory<span class="_ _7"></span>,<span class="_ _11"> </span>it<span class="_ _c"> </span>requires<span class="_ _f"> </span>the<span class="_ _c"> </span>data<span class="_ _c"> </span>to<span class="_ _f"> </span>b<span class="_ _4"></span>e<span class="_ _c"> </span>ﬁrst</div><div class="t m0 x13 h7 yc20 ff3 fs4 fc0 sc0 ls0 ws0">retriev<span class="_ _1"></span>ed from<span class="_ _13"> </span>memory in<span class="_ _8"></span>to a<span class="_ _13"> </span>register b<span class="_ _8"></span>y executing a<span class="_ _12"> </span>load instruction.<span class="_ _3"> </span>As an<span class="_ _13"> </span>example,</div><div class="t m0 x13 h7 yc21 ff3 fs4 fc0 sc0 ls0 ws0">let<span class="_ _12"> </span>us<span class="_ _12"> </span>consider<span class="_ _12"> </span>the<span class="_ _13"> </span>follo<span class="_ _1"></span>wing<span class="_ _12"> </span>assembly<span class="_ _12"> </span>code, whic<span class="_ _8"></span>h<span class="_ _12"> </span>loads<span class="_ _13"> </span>a<span class="_ _12"> </span>v<span class="_ _8"></span>alue<span class="_ _12"> </span>from<span class="_ _12"> </span>memory<span class="_ _7"></span>, m<span class="_ _8"></span>ultiply</div><div class="t m0 x13 h7 yc22 ff3 fs4 fc0 sc0 ls0 ws0">it<span class="_ _2"> </span>b<span class="_ _1"></span>y<span class="_ _2"> </span>t<span class="_ _1"></span>w<span class="_ _1"></span>o,<span class="_ _2"> </span>and<span class="_ _2"> </span>stores<span class="_ _2"> </span>the<span class="_ _2"> </span>result<span class="_ _2"> </span>on<span class="_ _2"> </span>memory<span class="_ _7"></span>.</div><div class="t m0 xd5 h8 yc23 ff24 fs12 fc0 sc0 ls0 ws0">1<span class="_ _1f"> </span><span class="ff5 fs4">lw<span class="_ _85"> </span>a5,<span class="_ _e"> </span>0(a0)</span></div><div class="t m0 xd5 h8 yc24 ff24 fs12 fc0 sc0 ls0 ws0">2<span class="_ _1f"> </span><span class="ff5 fs4">add<span class="_ _e"> </span>a6,<span class="_ _11"> </span>a5,<span class="_ _e"> </span>a5</span></div><div class="t m0 xd5 h8 yc25 ff24 fs12 fc0 sc0 ls0 ws0">3<span class="_ _1f"> </span><span class="ff5 fs4">sw<span class="_ _85"> </span>a6,<span class="_ _e"> </span>0(a0)</span></div><div class="t m0 x14 h7 yc26 ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _3"> </span>ﬁrst<span class="_ _3"> </span>instruction,<span class="_ _c"> </span>called<span class="_ _3"> </span>load<span class="_ _3"> </span>word<span class="_ _a"> </span>and<span class="_ _3"> </span>indicated<span class="_ _3"> </span>by<span class="_ _3"> </span>the<span class="_ _3"> </span>mnemonic<span class="_ _3"> </span><span class="ff5">lw</span>,<span class="_ _c"> </span>is<span class="_ _3"> </span>a</div><div class="t m0 x13 h7 yc27 ff3 fs4 fc0 sc0 ls0 ws0">load<span class="_ _2"> </span>instruction.<span class="_ _c"> </span>It<span class="_ _d"> </span>retrieves<span class="_ _5"> </span>a<span class="_ _2"> </span><span class="ff5">word<span class="_ _d"> </span></span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _2"> </span>memory<span class="_ _2"> </span>and<span class="_ _d"> </span>stores<span class="_ _2"> </span>it<span class="_ _2"> </span>on<span class="_ _2"> </span>register<span class="_ _d"> </span><span class="ff5">a5</span>.</div><div class="t m0 x13 h7 yc28 ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _a"> </span>expression<span class="_ _a"> </span><span class="ff5">0(a0)<span class="_ _a"> </span></span>indicates<span class="_ _a"> </span>the<span class="_ _3"> </span>address<span class="_ _a"> </span>of<span class="_ _a"> </span>the<span class="_ _a"> </span>memory<span class="_ _a"> </span>p<span class="_ _4"></span>osition<span class="_ _a"> </span>that<span class="_ _a"> </span>stores<span class="_ _a"> </span>the</div><div class="t m0 x13 h7 yc29 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _8"></span>alue<span class="_ _3"> </span>that<span class="_ _a"> </span>must<span class="_ _a"> </span>b<span class="_ _4"></span>e<span class="_ _a"> </span>loaded.<span class="_ _b"> </span>In<span class="_ _3"> </span>this<span class="_ _3"> </span>case,<span class="_ _3"> </span>the<span class="_ _3"> </span>address<span class="_ _3"> </span>is<span class="_ _3"> </span>the<span class="_ _3"> </span>sum<span class="_ _3"> </span>of<span class="_ _a"> </span>the<span class="_ _3"> </span>conten<span class="_ _8"></span>ts<span class="_ _3"> </span>of</div><div class="t m0 x13 h7 yc2a ff3 fs4 fc0 sc0 ls0 ws0">register<span class="_ _2"> </span><span class="ff5">a0<span class="_ _5"> </span></span>and<span class="_ _2"> </span>the<span class="_ _2"> </span>constant<span class="_ _5"> </span><span class="ff5">0</span>.<span class="_ _c"> </span>In<span class="_ _2"> </span>other<span class="_ _2"> </span>w<span class="_ _1"></span>ords,<span class="_ _2"> </span>in<span class="_ _2"> </span>case<span class="_ _5"> </span>register<span class="_ _2"> </span><span class="ff5">a0<span class="_ _2"> </span></span>contains<span class="_ _5"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue</div><div class="t m0 x13 h7 yc2b ff5 fs4 fc0 sc0 ls0 ws0">8000<span class="_ _5"> </span><span class="ff3">when<span class="_ _5"> </span>this<span class="_ _5"> </span>load<span class="_ _2"> </span>instruction<span class="_ _5"> </span>is<span class="_ _5"> </span>executed,<span class="_ _2"> </span>the<span class="_ _5"> </span>hardware will<span class="_ _5"> </span>retrieve<span class="_ _5"> </span>the<span class="_ _5"> </span>data<span class="_ _5"> </span>from</span></div><div class="t m0 x13 h7 yc2c ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>memory<span class="_ _2"> </span>lo<span class="_ _4"></span>cation<span class="_ _5"> </span>asso<span class="_ _4"></span>ciated<span class="_ _5"> </span>with<span class="_ _2"> </span>address<span class="_ _2"> </span><span class="ff5">8000</span>.</div><div class="t m0 x14 h7 yc2d ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _f"> </span>second<span class="_ _f"> </span>instruction,<span class="_ _11"> </span>indicated<span class="_ _f"> </span>by<span class="_ _c"> </span>the<span class="_ _f"> </span>mnemonic<span class="_ _f"> </span><span class="ff5">add</span>,<span class="_ _11"> </span>adds<span class="_ _f"> </span>tw<span class="_ _8"></span>o<span class="_ _f"> </span>v<span class="_ _8"></span>alues<span class="_ _f"> </span>and</div><div class="t m0 x13 h7 yc2e ff3 fs4 fc0 sc0 ls0 ws0">stores<span class="_ _d"> </span>the<span class="_ _d"> </span>result<span class="_ _d"> </span>on<span class="_ _2"> </span>a<span class="_ _d"> </span>register.<span class="_ _e"> </span>In<span class="_ _d"> </span>this<span class="_ _d"> </span>case,<span class="_ _d"> </span>it<span class="_ _d"> </span>is<span class="_ _d"> </span>adding<span class="_ _d"> </span>the<span class="_ _d"> </span>v<span class="_ _8"></span>alues<span class="_ _d"> </span>from<span class="_ _d"> </span>registers<span class="_ _d"> </span><span class="ff5">a5</span></div><div class="t m0 x13 h7 yc2f ff3 fs4 fc0 sc0 ls0 ws0">and<span class="_ _5"> </span><span class="ff5">a5<span class="_ _5"> </span></span>and<span class="_ _2"> </span>storing<span class="_ _5"> </span>the<span class="_ _2"> </span>result<span class="_ _5"> </span>on<span class="_ _5"> </span>register<span class="_ _2"> </span><span class="ff5">a6</span>.<span class="_ _3"> </span>Notice<span class="_ _2"> </span>that,<span class="_ _5"> </span>since<span class="_ _2"> </span>both<span class="_ _2"> </span>source<span class="_ _5"> </span>op<span class="_ _4"></span>erands</div><div class="t m0 x13 h7 yc30 ff3 fs4 fc0 sc0 ls0 ws0">are<span class="_ _a"> </span>the<span class="_ _a"> </span>same,<span class="_ _3"> </span><span class="ff8">i.e.</span>,<span class="_ _3"> </span><span class="ff5">a5</span>,<span class="_ _3"> </span>the<span class="_ _3"> </span>result<span class="_ _a"> </span>is<span class="_ _3"> </span>equiv<span class="_ _8"></span>alen<span class="_ _1"></span>t<span class="_ _a"> </span>to<span class="_ _3"> </span>m<span class="_ _8"></span>ultiplying<span class="_ _3"> </span>the<span class="_ _a"> </span>conten<span class="_ _8"></span>ts<span class="_ _3"> </span>of<span class="_ _a"> </span><span class="ff5">a5<span class="_ _3"> </span></span>b<span class="_ _8"></span>y</div><div class="t m0 x13 h7 yc31 ff3 fs4 fc0 sc0 ls0 ws0">t<span class="_ _1"></span>w<span class="_ _1"></span>o.</div><div class="t m0 x14 h7 yc32 ff3 fs4 fc0 sc0 ls0 ws0">Finally<span class="_ _7"></span>, the<span class="_ _12"> </span>third instruction, called<span class="_ _12"> </span>store w<span class="_ _8"></span>ord and<span class="_ _13"> </span>indicated b<span class="_ _8"></span>y the<span class="_ _12"> </span>mnemonic <span class="ff5">sw</span>,</div><div class="t m0 x13 h7 yc33 ff3 fs4 fc0 sc0 ls0 ws0">stores<span class="_ _5"> </span>the<span class="_ _5"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _5"> </span>register<span class="_ _2"> </span><span class="ff5">a6<span class="_ _5"> </span></span>into memory<span class="_ _7"></span>.<span class="_ _c"> </span>Again,<span class="_ _5"> </span>the<span class="_ _2"> </span>expression<span class="_ _5"> </span><span class="ff5">0(a0)<span class="_ _5"> </span></span>indicates</div><div class="t m0 x13 h7 yc34 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>address<span class="_ _2"> </span>of<span class="_ _2"> </span>the<span class="_ _2"> </span>memory<span class="_ _2"> </span>p<span class="_ _4"></span>osition<span class="_ _5"> </span>that<span class="_ _2"> </span>will<span class="_ _2"> </span>receive<span class="_ _5"> </span>the<span class="_ _2"> </span>data.</div><div class="t m0 x13 hd yc35 ff6 fs3 fc0 sc0 ls0 ws0">6.4<span class="_ _36"> </span>Pseudo-instructions</div><div class="t m0 x13 h7 yc36 ff3 fs4 fc0 sc0 ls0 ws0">When<span class="_ _c"> </span>assembling<span class="_ _3"> </span>an<span class="_ _f"> </span>assem<span class="_ _1"></span>bly<span class="_ _c"> </span>program,<span class="_ _f"> </span>the<span class="_ _f"> </span>assembler<span class="_ _3"> </span>conv<span class="_ _8"></span>erts<span class="_ _f"> </span>eac<span class="_ _1"></span>h<span class="_ _c"> </span>assembly<span class="_ _3"> </span>in-</div><div class="t m0 x13 h7 yc37 ff3 fs4 fc0 sc0 ls0 ws0">struction (enco<span class="_ _4"></span>ded as plain<span class="_ _5"> </span>text) into its corresp<span class="_ _4"></span>onding mac<span class="_ _1"></span>hine instruction (enco<span class="_ _4"></span>ded</div><div class="t m0 x13 h7 yc38 ff3 fs4 fc0 sc0 ls0 ws0">as<span class="_ _f"> </span>binary).<span class="_ _31"> </span>F<span class="_ _7"></span>or<span class="_ _11"> </span>example,<span class="_ _11"> </span>the<span class="_ _11"> </span>assembly<span class="_ _c"> </span>instruction<span class="_ _11"> </span>“<span class="ff5">add<span class="_ _11"> </span>x10,<span class="_ _e"> </span>x11,<span class="_ _e"> </span>x12</span>”<span class="_ _f"> </span>is<span class="_ _11"> </span>con-</div><div class="t m0 x13 h7 yc39 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _1"></span>erted<span class="_ _d"> </span>in<span class="_ _1"></span>to<span class="_ _d"> </span>its<span class="_ _2"> </span>corresp<span class="_ _4"></span>onding<span class="_ _d"> </span>mac<span class="_ _1"></span>hine<span class="_ _d"> </span>instruction,<span class="_ _d"> </span>which<span class="_ _2"> </span>is<span class="_ _d"> </span>enco<span class="_ _4"></span>ded<span class="_ _2"> </span>in<span class="_ _d"> </span>four<span class="_ _d"> </span>bytes<span class="_ _2"> </span>as</div><div class="t m0 x13 h7 yc3a ff3 fs4 fc0 sc0 ls0 ws0">“<span class="ff5">0x00c58533</span>”.</div><div class="t m0 x14 h7 yc3b ff3 fs4 fc0 sc0 ls0 ws0">A<span class="_ _3"> </span><span class="ff7">pseudo-instruction<span class="_ _c"> </span></span>is<span class="_ _c"> </span>an<span class="_ _c"> </span>assembly<span class="_ _3"> </span>instruction<span class="_ _3"> </span>that<span class="_ _c"> </span>do<span class="_ _4"></span>es<span class="_ _3"> </span>not<span class="_ _c"> </span>hav<span class="_ _8"></span>e<span class="_ _c"> </span>a<span class="_ _c"> </span>corre-</div><div class="t m0 x13 h7 yc3c ff3 fs4 fc0 sc0 ls0 ws0">sp<span class="_ _4"></span>onding machine instruction<span class="_ _5"> </span>on<span class="_ _5"> </span>the<span class="_ _5"> </span>,<span class="_ _5"> </span>but<span class="_ _5"> </span>can<span class="_ _5"> </span>b<span class="_ _4"></span>e translated<span class="_ _5"> </span>automatically<span class="_ _5"> </span>by the<span class="_ _5"> </span>as-</div><div class="t m0 x13 h7 yc3d ff3 fs4 fc0 sc0 ls0 ws0">sem<span class="_ _1"></span>bler<span class="_ _5"> </span>into<span class="_ _5"> </span>one<span class="_ _2"> </span>or<span class="_ _5"> </span>more<span class="_ _2"> </span>alternative machine<span class="_ _5"> </span>instructions<span class="_ _2"> </span>to<span class="_ _5"> </span>achiev<span class="_ _8"></span>e<span class="_ _2"> </span>the<span class="_ _2"> </span>same<span class="_ _5"> </span>eﬀect.</div><div class="t m0 x13 h7 yc3e ff3 fs4 fc0 sc0 ls0 ws0">As an<span class="_ _5"> </span>example,<span class="_ _5"> </span>the<span class="_ _5"> </span>no<span class="_ _5"> </span>op<span class="_ _4"></span>eration instruction,<span class="_ _5"> </span>or<span class="_ _5"> </span>“<span class="ff5">nop</span>”,<span class="_ _5"> </span>is<span class="_ _5"> </span>a<span class="_ _5"> </span>R<span class="_ _2c"></span>V32I<span class="_ _5"> </span>pseudo-instruction</div><div class="t m0 x13 h7 yc3f ff3 fs4 fc0 sc0 ls0 ws0">that is<span class="_ _5"> </span>conv<span class="_ _8"></span>erted<span class="_ _5"> </span>by the<span class="_ _5"> </span>assembler into the<span class="_ _5"> </span>“<span class="ff5">addi<span class="_ _e"> </span>x0,<span class="_ _e"> </span>x0,<span class="_ _11"> </span>0</span>”<span class="_ _5"> </span>instruction</div><div class="t m0 x12c h11 yc40 ffc fs7 fc0 sc0 ls0 ws0">5</div><div class="t m0 xc2 h7 yc3f ff3 fs4 fc0 sc0 ls0 ws0">.<span class="_ _3"> </span>Another</div><div class="t m0 x13 h7 yc41 ff3 fs4 fc0 sc0 ls0 ws0">example<span class="_ _3"> </span>is<span class="_ _3"> </span>the<span class="_ _3"> </span>“<span class="ff5">mv</span>”<span class="_ _3"> </span>instruction,<span class="_ _c"> </span>whic<span class="_ _1"></span>h<span class="_ _3"> </span>copies<span class="_ _3"> </span>the<span class="_ _3"> </span>conten<span class="_ _8"></span>ts<span class="_ _3"> </span>of<span class="_ _3"> </span>one<span class="_ _3"> </span>register<span class="_ _3"> </span>into<span class="_ _a"> </span>an-</div><div class="t m0 x13 h7 yc42 ff3 fs4 fc0 sc0 ls0 ws0">other.<span class="_ _3"> </span>In<span class="_ _5"> </span>this<span class="_ _5"> </span>case,<span class="_ _5"> </span>the pseudo-instruction<span class="_ _5"> </span>“<span class="ff5">mv<span class="_ _e"> </span>a5,<span class="_ _e"> </span>a7</span>”,<span class="_ _5"> </span>which copies the<span class="_ _5"> </span>conten<span class="_ _8"></span>ts<span class="_ _5"> </span>of</div><div class="t m0 x13 h7 yc43 ff5 fs4 fc0 sc0 ls0 ws0">a7<span class="_ _d"> </span><span class="ff3">into<span class="_ _2"> </span></span>a5<span class="ff3">,<span class="_ _d"> </span>is<span class="_ _d"> </span>conv<span class="_ _8"></span>erted<span class="_ _a"> </span>in<span class="_ _1"></span>to<span class="_ _d"> </span>the<span class="_ _d"> </span>instruction<span class="_ _d"> </span>“<span class="ff5">addi<span class="_ _e"> </span>a5,<span class="_ _11"> </span>a7,<span class="_ _e"> </span>0</span>”,<span class="_ _a"> </span>whic<span class="_ _1"></span>h<span class="_ _d"> </span>adds<span class="_ _d"> </span>zero<span class="_ _d"> </span>to</span></div><div class="t m0 x13 h7 yc44 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">a7<span class="_ _2"> </span></span>and<span class="_ _2"> </span>stores<span class="_ _2"> </span>the<span class="_ _2"> </span>result<span class="_ _2"> </span>on<span class="_ _2"> </span>register<span class="_ _2"> </span><span class="ff5">a5</span>.</div><div class="t m0 x14 h7 yc45 ff3 fs4 fc0 sc0 ls0 ws0">Since<span class="_ _a"> </span>the<span class="_ _3"> </span>fo<span class="_ _4"></span>cus<span class="_ _a"> </span>of<span class="_ _3"> </span>the<span class="_ _3"> </span>bo<span class="_ _4"></span>ok<span class="_ _a"> </span>is<span class="_ _3"> </span>on<span class="_ _3"> </span>assembly<span class="_ _a"> </span>programming,<span class="_ _3"> </span>the<span class="_ _3"> </span>remaining<span class="_ _a"> </span>of<span class="_ _3"> </span>this</div><div class="t m0 x13 h7 yc46 ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _4"></span>ook<span class="_ _5"> </span>will<span class="_ _5"> </span>not<span class="_ _2"> </span>diﬀeren<span class="_ _1"></span>tiate<span class="_ _5"> </span>pseudo-instructions<span class="_ _5"> </span>from<span class="_ _5"> </span>real<span class="_ _2"> </span>R<span class="_ _2c"></span>V32I<span class="_ _5"> </span>machine instructions.</div><div class="t m0 x13 h7 yc47 ff3 fs4 fc0 sc0 ls0 ws0">W<span class="_ _7"></span>e<span class="_ _a"> </span>refer<span class="_ _a"> </span>the<span class="_ _a"> </span>reader<span class="_ _3"> </span>to<span class="_ _a"> </span>the<span class="_ _a"> </span>RISC-V<span class="_ _a"> </span>Instruction<span class="_ _3"> </span>Set<span class="_ _a"> </span>Manual<span class="_ _d"> </span>[4]<span class="_ _a"> </span>for<span class="_ _3"> </span>a<span class="_ _a"> </span>full<span class="_ _a"> </span>list<span class="_ _a"> </span>of<span class="_ _3"> </span>real</div><div class="t m0 x13 h7 yc48 ff3 fs4 fc0 sc0 ls0 ws0">R<span class="_ _2c"></span>V32I<span class="_ _2"> </span>mac<span class="_ _1"></span>hine<span class="_ _2"> </span>instructions<span class="_ _2"> </span>and<span class="_ _2"> </span>pseudo-instructions.</div><div class="t m0 x13 hd yc49 ff6 fs3 fc0 sc0 ls0 ws0">6.5<span class="_ _36"> </span>Logic,<span class="_ _e"> </span>shift,<span class="_ _e"> </span>and<span class="_ _1f"> </span>arithmetic<span class="_ _e"> </span>instructions</div><div class="t m0 x13 h7 yc4a ff3 fs4 fc0 sc0 ls0 ws0">Logic, shift, and arithmetic instructions are instructions that p<span class="_ _4"></span>erform logic, shift, and</div><div class="t m0 x13 h7 yc4b ff3 fs4 fc0 sc0 ls0 ws0">arithmetic<span class="_ _2"> </span>op<span class="_ _4"></span>erations<span class="_ _5"> </span>on<span class="_ _2"> </span>data.</div><div class="t m0 x42 h1e y21b ff12 fse fc0 sc0 ls0 ws0">5</div><div class="t m0 x14 h1f y21c ff13 fsf fc0 sc0 ls0 ws0">This<span class="_ _38"> </span>instruction<span class="_ _38"> </span>adds<span class="_ _5"> </span>zero<span class="_ _38"> </span>to<span class="_ _38"> </span>zero<span class="_ _5"> </span>and<span class="_ _38"> </span>discards<span class="_ _38"> </span>the<span class="_ _5"> </span>results<span class="_ _38"> </span>by<span class="_ _13"> </span>storing<span class="_ _5"> </span>it<span class="_ _38"> </span>on<span class="_ _38"> </span>register<span class="_ _5"> </span>x0,<span class="_ _38"> </span>which<span class="_ _13"> </span>is</div><div class="t m0 x13 h1f y61 ff13 fsf fc0 sc0 ls0 ws0">hard-wired<span class="_ _38"> </span>to<span class="_ _38"> </span>zero.</div><div class="t m0 x43 h7 yc ff5 fs4 fc0 sc0 ls0 ws0">http://riscv-<span class="_ _4"></span>programming.org<span class="_ _2"> </span><span class="ff3">(V<span class="_ _7"></span>ersion:<span class="_ _c"> </span>August<span class="_ _5"> </span>21,<span class="_ _d"> </span>2021)<span class="_ _6f"> </span>56</span></div><a class="l" href="#pfc" data-dest-detail='[12,"XYZ",136.063,549.884,null]'><div class="d m1" style="border-style:none;position:absolute;left:232.528000px;bottom:733.131000px;width:108.032000px;height:11.955000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfc" data-dest-detail='[12,"XYZ",136.063,582.159,null]'><div class="d m1" style="border-style:none;position:absolute;left:363.006000px;bottom:709.774000px;width:69.996000px;height:10.849000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfc" data-dest-detail='[12,"XYZ",136.063,582.159,null]'><div class="d m1" style="border-style:none;position:absolute;left:135.067000px;bottom:587.001000px;width:70.783000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfc" data-dest-detail='[12,"XYZ",136.063,582.159,null]'><div class="d m1" style="border-style:none;position:absolute;left:204.087000px;bottom:539.181000px;width:70.487000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,767.979,null]'><div class="d m1" style="border-style:none;position:absolute;left:161.905000px;bottom:311.628000px;width:94.834000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",90.709,113.65,null]'><div class="d m1" style="border-style:none;position:absolute;left:296.479000px;bottom:299.673000px;width:1.992000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,767.979,null]'><div class="d m1" style="border-style:none;position:absolute;left:423.178000px;bottom:275.486000px;width:82.385000px;height:11.125000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf46" data-dest-detail='[70,"XYZ",151.306,89.795,null]'><div class="d m1" style="border-style:none;position:absolute;left:456.281000px;bottom:263.807000px;width:6.462000px;height:12.040000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,767.979,null]'><div class="d m1" style="border-style:none;position:absolute;left:236.389000px;bottom:239.897000px;width:82.386000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,767.979,null]'><div class="d m1" style="border-style:none;position:absolute;left:250.690000px;bottom:191.544000px;width:86.316000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf93" data-dest-detail='[147,"XYZ",90.709,546.583,null]'><div class="d m1" style="border-style:none;position:absolute;left:403.592000px;bottom:181.526000px;width:6.974000px;height:8.413000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,767.979,null]'><div class="d m1" style="border-style:none;position:absolute;left:278.418000px;bottom:167.634000px;width:86.316000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:185.308000px;bottom:36.395000px;width:148.940000px;height:13.948000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
