<div id="pf4d" class="pf w0 h0" data-page-no="4d"><div class="pc pc4d w0 h0"><img class="bi x18 yd65 w2 h88" alt="" src="bg4d.png"/><div class="t m0 x18 h7 y15a ff3 fs4 fc0 sc0 ls0 ws0">6.6.<span class="_ _22"> </span>DA<span class="_ _2c"></span>T<span class="_ _7"></span>A<span class="_ _2"> </span>MOVEMENT<span class="_ _5"> </span>INSTRUCTIONS</div><div class="t m0 x18 h7 y38 ff3 fs4 fc0 sc0 ls0 ws0">divisions.<span class="_ _c"> </span>The<span class="_ _2"> </span>following<span class="_ _2"> </span>assem<span class="_ _8"></span>bly<span class="_ _d"> </span>co<span class="_ _4"></span>de<span class="_ _5"> </span>shows<span class="_ _5"> </span>an<span class="_ _d"> </span>example<span class="_ _2"> </span>of<span class="_ _2"> </span>how<span class="_ _5"> </span>the<span class="_ _d"> </span><span class="ff5">slli<span class="_ _2"> </span></span>and<span class="_ _2"> </span><span class="ff5">addi</span></div><div class="t m0 x18 h7 yed ff3 fs4 fc0 sc0 ls0 ws0">instructions<span class="_ _2"> </span>ma<span class="_ _1"></span>y<span class="_ _2"> </span>b<span class="_ _4"></span>e<span class="_ _5"> </span>used<span class="_ _2"> </span>to<span class="_ _2"> </span>multiply<span class="_ _5"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>of<span class="_ _2"> </span><span class="ff5">a2<span class="_ _2"> </span></span>by<span class="_ _5"> </span>5<span class="_ _2"> </span>and<span class="_ _2"> </span>by<span class="_ _5"> </span>10:</div><div class="t m0 x111 h8 yd66 ff24 fs12 fc0 sc0 ls0 ws0">1<span class="_ _1f"> </span><span class="ff5 fs4">slli<span class="_ _86"> </span>a0,<span class="_ _e"> </span>a2,<span class="_ _86"> </span>2<span class="_ _86"> </span>#<span class="_ _11"> </span>a0<span class="_ _e"> </span>&lt;=<span class="_ _e"> </span>a2<span class="_ _e"> </span>*<span class="_ _11"> </span>4</span></div><div class="t m0 x111 h8 yd67 ff24 fs12 fc0 sc0 ls0 ws0">2<span class="_ _1f"> </span><span class="ff5 fs4">add<span class="_ _40"> </span>a0,<span class="_ _e"> </span>a0,<span class="_ _11"> </span>a2<span class="_ _86"> </span>#<span class="_ _e"> </span>a0<span class="_ _e"> </span>&lt;=<span class="_ _e"> </span>a0<span class="_ _11"> </span>+<span class="_ _e"> </span>a2,<span class="_ _e"> </span>i.e.,<span class="_ _e"> </span>a2<span class="_ _11"> </span>*<span class="_ _e"> </span>5</span></div><div class="t m0 x111 h8 yd68 ff24 fs12 fc0 sc0 ls0 ws0">3<span class="_ _1f"> </span><span class="ff5 fs4">slli<span class="_ _86"> </span>a1,<span class="_ _e"> </span>a0,<span class="_ _86"> </span>1<span class="_ _86"> </span>#<span class="_ _11"> </span>a1<span class="_ _e"> </span>&lt;=<span class="_ _e"> </span>a0<span class="_ _e"> </span>*<span class="_ _11"> </span>2,<span class="_ _e"> </span>i.e.,<span class="_ _e"> </span>a2<span class="_ _e"> </span>*<span class="_ _11"> </span>10</span></div><div class="t m0 x18 hd yd69 ff6 fs3 fc0 sc0 ls0 ws0">6.6<span class="_ _36"> </span>Data<span class="_ _e"> </span>mo<span class="_ _8"></span>v<span class="_ _1"></span>emen<span class="_ _8"></span>t<span class="_ _e"> </span>instructions</div><div class="t m0 x18 h7 yd6a ff3 fs4 fc0 sc0 ls0 ws0">R<span class="_ _2c"></span>V32I<span class="_ _d"> </span>data<span class="_ _2"> </span>mov<span class="_ _8"></span>ement<span class="_ _2"> </span>instructions<span class="_ _d"> </span>can<span class="_ _d"> </span>b<span class="_ _4"></span>e<span class="_ _2"> </span>used<span class="_ _d"> </span>to<span class="_ _d"> </span>load<span class="_ _d"> </span>data<span class="_ _d"> </span>from<span class="_ _d"> </span>memory<span class="_ _d"> </span>into<span class="_ _2"> </span>reg-</div><div class="t m0 x18 h7 yd6b ff3 fs4 fc0 sc0 ls0 ws0">isters,<span class="_ _c"> </span>store<span class="_ _3"> </span>register<span class="_ _3"> </span>data<span class="_ _3"> </span>into<span class="_ _a"> </span>memory<span class="_ _7"></span>,<span class="_ _c"> </span>copy<span class="_ _3"> </span>data<span class="_ _3"> </span>from<span class="_ _3"> </span>one<span class="_ _3"> </span>register<span class="_ _3"> </span>to<span class="_ _3"> </span>another,<span class="_ _c"> </span>or</div><div class="t m0 x18 h7 yd6c ff3 fs4 fc0 sc0 ls0 ws0">load<span class="_ _a"> </span>immediate<span class="_ _a"> </span>v<span class="_ _8"></span>alues<span class="_ _a"> </span>or<span class="_ _a"> </span>lab<span class="_ _4"></span>el<span class="_ _d"> </span>addresses<span class="_ _3"> </span>in<span class="_ _8"></span>to<span class="_ _3"> </span>registers.<span class="_ _1b"> </span>T<span class="_ _7"></span>able<span class="_ _a"> </span>6.8<span class="_ _a"> </span>shows<span class="_ _d"> </span>the<span class="_ _a"> </span>R<span class="_ _2c"></span>V32I</div><div class="t m0 x18 h7 yd6d ff3 fs4 fc0 sc0 ls0 ws0">data<span class="_ _2"> </span>mov<span class="_ _8"></span>ement<span class="_ _5"> </span>instructions<span class="_ _d"> </span>and<span class="_ _2"> </span>T<span class="_ _7"></span>able<span class="_ _2"> </span>6.9<span class="_ _d"> </span>shows<span class="_ _5"> </span>the<span class="_ _d"> </span>R<span class="_ _2c"></span>V32I<span class="_ _2"> </span>data<span class="_ _2"> </span>mov<span class="_ _8"></span>ement<span class="_ _2"> </span>pseudo-</div><div class="t m0 x18 h7 yd6e ff3 fs4 fc0 sc0 ls0 ws0">instructions.</div><div class="t m0 x4b h7 yd6f ff3 fs4 fc0 sc0 ls0 ws0">Instruction<span class="_ _4c"> </span>Description</div><div class="t m0 x4b h8 yd70 ff5 fs4 fc0 sc0 ls0 ws0">lw<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x99 h7 yd71 ff3 fs4 fc0 sc0 ls0 ws0">Loads<span class="_ _c"> </span>a<span class="_ _c"> </span>32-bit<span class="_ _c"> </span><span class="ff5">signed<span class="_ _c"> </span></span>or<span class="_ _c"> </span><span class="ff5">unsigned<span class="_ _c"> </span>word<span class="_ _c"> </span></span>from<span class="_ _c"> </span>memory</div><div class="t m0 x99 h7 yd70 ff3 fs4 fc0 sc0 ls0 ws0">in<span class="_ _1"></span>to<span class="_ _f"> </span>register<span class="_ _f"> </span><span class="ff5">rd</span>.<span class="_ _31"> </span>The<span class="_ _11"> </span>memory<span class="_ _f"> </span>address<span class="_ _f"> </span>is<span class="_ _f"> </span>calculated<span class="_ _11"> </span>b<span class="_ _1"></span>y</div><div class="t m0 x99 h7 yd72 ff3 fs4 fc0 sc0 ls0 ws0">adding<span class="_ _2"> </span>the<span class="_ _2"> </span>immediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs1</span>.</div><div class="t m0 x4b h8 yd73 ff5 fs4 fc0 sc0 ls0 ws0">lh<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x99 h7 yd74 ff3 fs4 fc0 sc0 ls0 ws0">Loads<span class="_ _a"> </span>a<span class="_ _a"> </span>16-bit<span class="_ _d"> </span><span class="ff5">signed<span class="_ _e"> </span>halfword<span class="_ _a"> </span></span>from<span class="_ _a"> </span>memory<span class="_ _a"> </span>into<span class="_ _d"> </span>reg-</div><div class="t m0 x99 h7 yd73 ff3 fs4 fc0 sc0 ls0 ws0">ister<span class="_ _5"> </span><span class="ff5">rd</span>.<span class="_ _c"> </span>The<span class="_ _5"> </span>memory<span class="_ _2"> </span>address<span class="_ _5"> </span>is<span class="_ _2"> </span>calculated<span class="_ _5"> </span>by<span class="_ _5"> </span>adding<span class="_ _5"> </span>the</div><div class="t m0 x99 h7 yd75 ff3 fs4 fc0 sc0 ls0 ws0">immediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs1</span>.</div><div class="t m0 x4b h8 yd76 ff5 fs4 fc0 sc0 ls0 ws0">lhu<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x99 h7 yd77 ff3 fs4 fc0 sc0 ls0 ws0">Loads<span class="_ _12"> </span>a 16-bit<span class="_ _12"> </span><span class="ff5">unsigned<span class="_ _11"> </span>halfword<span class="_ _13"> </span></span>from<span class="_ _12"> </span>memory in<span class="_ _8"></span>to<span class="_ _13"> </span>reg-</div><div class="t m0 x99 h7 yd76 ff3 fs4 fc0 sc0 ls0 ws0">ister<span class="_ _5"> </span><span class="ff5">rd</span>.<span class="_ _c"> </span>The<span class="_ _5"> </span>memory<span class="_ _2"> </span>address<span class="_ _5"> </span>is<span class="_ _2"> </span>calculated<span class="_ _5"> </span>by<span class="_ _5"> </span>adding<span class="_ _5"> </span>the</div><div class="t m0 x99 h7 yd78 ff3 fs4 fc0 sc0 ls0 ws0">immediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs1</span>.</div><div class="t m0 x4b h8 yd79 ff5 fs4 fc0 sc0 ls0 ws0">lb<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x99 h7 yd7a ff3 fs4 fc0 sc0 ls0 ws0">Loads<span class="_ _5"> </span>a<span class="_ _5"> </span>8-bit<span class="_ _5"> </span><span class="ff5">signed<span class="_ _11"> </span>byte<span class="_ _5"> </span></span>from<span class="_ _5"> </span>memory<span class="_ _5"> </span>into register<span class="_ _5"> </span><span class="ff5">rd</span>.</div><div class="t m0 x99 h7 yd79 ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _2"> </span>memory<span class="_ _2"> </span>address<span class="_ _2"> </span>is<span class="_ _2"> </span>calculated<span class="_ _5"> </span>by<span class="_ _5"> </span>adding<span class="_ _2"> </span>the<span class="_ _2"> </span>immedi-</div><div class="t m0 x99 h7 yd7b ff3 fs4 fc0 sc0 ls0 ws0">ate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs1</span>.</div><div class="t m0 x4b h8 yd7c ff5 fs4 fc0 sc0 ls0 ws0">lbu<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x99 h7 yd7d ff3 fs4 fc0 sc0 ls0 ws0">Loads<span class="_ _d"> </span>a<span class="_ _a"> </span>8-bit<span class="_ _a"> </span><span class="ff5">unsigned<span class="_ _e"> </span>byte<span class="_ _a"> </span></span>from<span class="_ _a"> </span>memory<span class="_ _a"> </span>into<span class="_ _d"> </span>register</div><div class="t m0 x99 h7 yd7c ff5 fs4 fc0 sc0 ls0 ws0">rd<span class="ff3">.<span class="_ _e"> </span>The<span class="_ _d"> </span>memory<span class="_ _d"> </span>address<span class="_ _d"> </span>is<span class="_ _d"> </span>calculated<span class="_ _d"> </span>by<span class="_ _2"> </span>adding<span class="_ _d"> </span>the<span class="_ _d"> </span>im-</span></div><div class="t m0 x99 h7 yd7e ff3 fs4 fc0 sc0 ls0 ws0">mediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs1</span>.</div><div class="t m0 x4b h8 yd7f ff5 fs4 fc0 sc0 ls0 ws0">sw<span class="_ _11"> </span>rs1,<span class="_ _e"> </span>imm(rs2)</div><div class="t m0 x99 h7 yd80 ff3 fs4 fc0 sc0 ls0 ws0">Stores<span class="_ _d"> </span>the<span class="_ _d"> </span>32-bit<span class="_ _d"> </span>v<span class="_ _8"></span>alue<span class="_ _d"> </span>at<span class="_ _d"> </span>register<span class="_ _d"> </span><span class="ff5">rs1<span class="_ _d"> </span></span>into<span class="_ _2"> </span>memory<span class="_ _7"></span>.<span class="_ _e"> </span>The</div><div class="t m0 x99 h7 yd7f ff3 fs4 fc0 sc0 ls0 ws0">memory<span class="_ _f"> </span>address<span class="_ _f"> </span>is<span class="_ _f"> </span>calculated<span class="_ _11"> </span>b<span class="_ _8"></span>y<span class="_ _11"> </span>adding<span class="_ _f"> </span>the<span class="_ _f"> </span>immediate</div><div class="t m0 x99 h7 yd81 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs2</span>.</div><div class="t m0 x4b h8 yd82 ff5 fs4 fc0 sc0 ls0 ws0">sh<span class="_ _11"> </span>rs1,<span class="_ _e"> </span>imm(rs2)</div><div class="t m0 x99 h7 yd83 ff3 fs4 fc0 sc0 ls0 ws0">Stores<span class="_ _a"> </span>the<span class="_ _a"> </span>16<span class="_ _a"> </span>least<span class="_ _a"> </span>signiﬁcan<span class="_ _1"></span>t<span class="_ _a"> </span>bits<span class="_ _a"> </span>from<span class="_ _a"> </span>register<span class="_ _a"> </span><span class="ff5">rs1<span class="_ _a"> </span></span>in<span class="_ _1"></span>to</div><div class="t m0 x99 h7 yd82 ff3 fs4 fc0 sc0 ls0 ws0">memory<span class="_ _7"></span>.<span class="_ _3"> </span>The<span class="_ _5"> </span>memory address<span class="_ _5"> </span>is calculated<span class="_ _5"> </span>by adding the</div><div class="t m0 x99 h7 yd84 ff3 fs4 fc0 sc0 ls0 ws0">immediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs2</span>.</div><div class="t m0 x4b h8 yd85 ff5 fs4 fc0 sc0 ls0 ws0">sb<span class="_ _11"> </span>rs1,<span class="_ _e"> </span>imm(rs2)</div><div class="t m0 x99 h7 yd86 ff3 fs4 fc0 sc0 ls0 ws0">Stores<span class="_ _c"> </span>the<span class="_ _3"> </span>8<span class="_ _c"> </span>least<span class="_ _c"> </span>signiﬁcant<span class="_ _3"> </span>bits<span class="_ _c"> </span>from<span class="_ _c"> </span>register<span class="_ _3"> </span><span class="ff5">rs1<span class="_ _c"> </span></span>into</div><div class="t m0 x99 h7 yd85 ff3 fs4 fc0 sc0 ls0 ws0">memory<span class="_ _7"></span>.<span class="_ _3"> </span>The<span class="_ _5"> </span>memory address<span class="_ _5"> </span>is calculated<span class="_ _5"> </span>by adding the</div><div class="t m0 x99 h7 yd87 ff3 fs4 fc0 sc0 ls0 ws0">immediate<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span><span class="ff5">imm<span class="_ _2"> </span></span>to<span class="_ _2"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>in<span class="_ _2"> </span><span class="ff5">rs2</span>.</div><div class="t m0 xf0 h7 y88c ff3 fs4 fc0 sc0 ls0 ws0">T<span class="_ _7"></span>able<span class="_ _2"> </span>6.8:<span class="_ _3"> </span>R<span class="_ _2c"></span>V32I<span class="_ _2"> </span>data<span class="_ _2"> </span>mov<span class="_ _8"></span>ement<span class="_ _2"> </span>instructions</div><div class="t m0 x18 ha yd88 ff6 fs6 fc0 sc0 ls0 ws0">6.6.1<span class="_ _17"> </span>Load<span class="_ _c"> </span>instructions</div><div class="t m0 x18 h7 yd89 ff3 fs4 fc0 sc0 ls0 ws0">All<span class="_ _5"> </span>R<span class="_ _2c"></span>V32I<span class="_ _2"> </span>load<span class="_ _5"> </span>instructions<span class="_ _2"> </span>(<span class="ff5">lw</span>,<span class="_ _5"> </span><span class="ff5">lh</span>,<span class="_ _2"> </span><span class="ff5">lhu</span>,<span class="_ _5"> </span><span class="ff5">lb</span>,<span class="_ _2"> </span>and<span class="_ _5"> </span><span class="ff5">lbu</span>)<span class="_ _2"> </span>load<span class="_ _5"> </span>v<span class="_ _8"></span>alues<span class="_ _2"> </span>from<span class="_ _5"> </span>memory<span class="_ _2"> </span>in<span class="_ _1"></span>to</div><div class="t m0 x18 h7 yd8a ff3 fs4 fc0 sc0 ls0 ws0">a<span class="_ _2"> </span>register.<span class="_ _3"> </span>The<span class="_ _2"> </span>assembly<span class="_ _2"> </span>syn<span class="_ _8"></span>tax<span class="_ _2"> </span>for<span class="_ _2"> </span>these<span class="_ _2"> </span>instructions<span class="_ _2"> </span>is:</div><div class="t m0 x18 h8 yd8b ff5 fs4 fc0 sc0 ls0 ws0">MNM<span class="_ _11"> </span>rd,<span class="_ _e"> </span>imm(rs1)</div><div class="t m0 x18 h7 y681 ff3 fs4 fc0 sc0 ls0 ws0">where<span class="_ _d"> </span><span class="ff5">MNM<span class="_ _d"> </span></span>indicates<span class="_ _d"> </span>the<span class="_ _2"> </span>instruction<span class="_ _d"> </span>mnemonic.<span class="_ _e"> </span>The<span class="_ _d"> </span>ﬁrst<span class="_ _d"> </span>op<span class="_ _4"></span>erand<span class="_ _2"> </span>(<span class="ff5">rd</span>)<span class="_ _d"> </span>indicates<span class="_ _d"> </span>the</div><div class="t m0 x18 h7 y682 ff3 fs4 fc0 sc0 ls0 ws0">target<span class="_ _3"> </span>register,<span class="_ _f"> </span><span class="ff8">i.e.</span>,<span class="_ _c"> </span>the<span class="_ _c"> </span>one<span class="_ _3"> </span>that<span class="_ _c"> </span>will<span class="_ _3"> </span>receive<span class="_ _3"> </span>the<span class="_ _3"> </span>v<span class="_ _8"></span>alue<span class="_ _c"> </span>loaded<span class="_ _3"> </span>from<span class="_ _c"> </span>memory<span class="_ _7"></span>.<span class="_ _0"> </span>The</div><div class="t m0 x18 h7 y683 ff3 fs4 fc0 sc0 ls0 ws0">second<span class="_ _a"> </span>(<span class="ff5">imm</span>)<span class="_ _a"> </span>and<span class="_ _a"> </span>third<span class="_ _3"> </span>(<span class="ff5">rs1</span>)<span class="_ _a"> </span>op<span class="_ _4"></span>erands<span class="_ _d"> </span>indicate<span class="_ _a"> </span>an<span class="_ _3"> </span>immediate<span class="_ _a"> </span>v<span class="_ _8"></span>alue<span class="_ _a"> </span>and<span class="_ _a"> </span>a<span class="_ _a"> </span>register,</div><div class="t m0 x18 h7 yea ff3 fs4 fc0 sc0 ls0 ws0">resp<span class="_ _4"></span>ectiv<span class="_ _8"></span>ely<span class="_ _7"></span>.<span class="_ _10"> </span>The<span class="_ _a"> </span>v<span class="_ _8"></span>alues<span class="_ _3"> </span>of<span class="_ _a"> </span>these<span class="_ _3"> </span>t<span class="_ _1"></span>w<span class="_ _1"></span>o<span class="_ _a"> </span>op<span class="_ _4"></span>erands<span class="_ _a"> </span>are<span class="_ _3"> </span>added<span class="_ _a"> </span>together<span class="_ _3"> </span>to<span class="_ _a"> </span>calculate<span class="_ _3"> </span>the</div><div class="t m0 x18 h7 yeb ff3 fs4 fc0 sc0 ls0 ws0">memory<span class="_ _2"> </span>address.</div><div class="t m0 xd h7 yec ff3 fs4 fc0 sc0 ls0 ws0">The <span class="ff7">load<span class="_ _d"> </span>word<span class="_ _38"> </span></span>instruction<span class="_ _5"> </span>(<span class="ff5">lw</span>)<span class="_ _5"> </span>loads<span class="_ _5"> </span>a<span class="_ _5"> </span>32-bit<span class="_ _5"> </span><span class="ff5">word<span class="_ _5"> </span></span>from<span class="_ _5"> </span>memory<span class="_ _5"> </span>in<span class="_ _1"></span>to<span class="_ _5"> </span>a register.</div><div class="t m0 x18 h7 y61 ff3 fs4 fc0 sc0 ls0 ws0">Since<span class="_ _c"> </span>a<span class="_ _f"> </span><span class="ff5">word<span class="_ _c"> </span></span>datatype<span class="_ _f"> </span>has<span class="_ _f"> </span>four<span class="_ _c"> </span>bytes,<span class="_ _f"> </span>this<span class="_ _f"> </span>instruction<span class="_ _c"> </span>loads<span class="_ _f"> </span>four<span class="_ _c"> </span>bytes<span class="_ _c"> </span>from<span class="_ _c"> </span>four</div><div class="t m0 x3f h7 yc ff5 fs4 fc0 sc0 ls0 ws0">http://riscv-<span class="_ _4"></span>programming.org<span class="_ _2"> </span><span class="ff3">(V<span class="_ _7"></span>ersion:<span class="_ _c"> </span>Ma<span class="_ _8"></span>y<span class="_ _2"> </span>4,<span class="_ _2"> </span>2022)<span class="_ _75"> </span>63</span></div><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",90.709,146.437,null]'><div class="d m1" style="border-style:none;position:absolute;left:111.893000px;bottom:609.850000px;width:77.639000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf4d" data-dest-detail='[77,"XYZ",90.709,583.345,null]'><div class="d m1" style="border-style:none;position:absolute;left:367.349000px;bottom:609.850000px;width:14.723000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf4e" data-dest-detail='[78,"XYZ",136.063,777.001,null]'><div class="d m1" style="border-style:none;position:absolute;left:261.655000px;bottom:597.895000px;width:14.722000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",90.709,146.437,null]'><div class="d m1" style="border-style:none;position:absolute;left:318.611000px;bottom:115.200000px;width:73.742000px;height:11.955000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:148.560000px;bottom:36.395000px;width:148.940000px;height:13.948000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
