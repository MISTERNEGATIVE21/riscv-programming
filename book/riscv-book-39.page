<div id="pf27" class="pf w0 h0" data-page-no="27"><div class="pc pc27 w0 h0"><img class="bi x17 y146 wb he" alt="" src="bg27.png"/><div class="t m0 x17 h7 y147 ff3 fs4 fc0 sc0 ls0 ws0">CHAPTER<span class="_ _2"> </span>3.<span class="_ _19"> </span>ASSEMBL<span class="_ _7"></span>Y,<span class="_ _2"> </span>OBJECT,<span class="_ _2"> </span>AND<span class="_ _2"> </span>EXECUT<span class="_ _7"></span>ABLE<span class="_ _2"> </span>FILES</div><div class="c x17 y76f w16 h63"><div class="t m0 x23 h64 y770 ff35 fs2a fc0 sc0 ls0 ws0">Assembler (<span class="ff36">e.g.</span> <span class="ff37">as</span>)<span class="_ _39"> </span>Assembler (<span class="ff36">e.g.</span> <span class="ff37">as</span>)</div><div class="t m0 x11e h64 y771 ff35 fs2a fc0 sc0 ls0 ws0">Compiler (<span class="ff36">e.g.</span> <span class="ff37">gcc</span>)</div><div class="t m0 xa h65 y772 ff38 fs2b fc2 sc0 ls0 ws0">01010101</div><div class="t m0 xa h65 y773 ff38 fs2b fc2 sc0 ls0 ws0">10001001</div><div class="t m0 x8a h66 y774 ff39 fs2c fc0 sc0 ls0 ws0">Machine language<span class="ff35"> program</span></div><div class="t m0 x8a h67 y775 ff39 fs2c fc0 sc0 ls0 ws0">(object file - binary)</div><div class="t m0 x13 h64 y771 ff35 fs2a fc0 sc0 ls0 ws0">Compiler (<span class="ff36">e.g.</span> <span class="ff37">gcc</span>)</div><div class="t m0 x77 h68 y776 ff38 fs2d fc0 sc0 ls0 ws0">func:</div><div class="t m0 x77 h68 y777 ff38 fs2d fc0 sc0 ls0 ws0">  li a1, 113</div><div class="t m0 x77 h68 y778 ff38 fs2d fc0 sc0 ls0 ws0">  mul a0, a0, a1</div><div class="t m0 x77 h68 y779 ff38 fs2d fc0 sc0 ls0 ws0">  ret</div><div class="t m0 x8a h66 y77a ff39 fs2c fc0 sc0 ls0 ws0">Assembly language<span class="ff35"> program</span></div><div class="t m0 x8a h67 y77b ff39 fs2c fc0 sc0 ls0 ws0">(text file)</div><div class="t m0 x77 h68 y77c ff38 fs2d fc0 sc0 ls0 ws0">int func(int a)</div><div class="t m0 x77 h68 y77d ff38 fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x77 h68 y77e ff38 fs2d fc0 sc0 ls0 ws0">  return a*113;</div><div class="t m0 x77 h68 y77f ff38 fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h66 y780 ff39 fs2c fc0 sc0 ls0 ws0">High-level language<span class="ff35"> program</span></div><div class="t m0 x8a h66 y781 ff35 fs2c fc0 sc0 ls0 ws0">(C, C++, Java, Pascal, ...)</div><div class="t m0 x8a h67 y782 ff39 fs2c fc0 sc0 ls0 ws0">(text file) </div><div class="t m0 x11f h68 y77c ff38 fs2d fc0 sc0 ls0 ws0">int main()</div><div class="t m0 x11f h68 y77d ff38 fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x11f h68 y77e ff38 fs2d fc0 sc0 ls0 ws0">  return func (10);</div><div class="t m0 x11f h68 y77f ff38 fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x2d h68 y776 ff38 fs2d fc0 sc0 ls0 ws0">main:</div><div class="t m0 x2d h68 y777 ff38 fs2d fc0 sc0 ls0 ws0">  li a0, 10</div><div class="t m0 x2d h68 y778 ff38 fs2d fc0 sc0 ls0 ws0">  jal func</div><div class="t m0 x2d h68 y779 ff38 fs2d fc0 sc0 ls0 ws0">  ret</div><div class="t m0 xd8 h65 y772 ff38 fs2b fc2 sc0 ls0 ws0">01010101</div><div class="t m0 xd8 h65 y773 ff38 fs2b fc2 sc0 ls0 ws0">10001001</div><div class="t m0 x8a h66 y783 ff39 fs2c fc0 sc0 ls0 ws0">Machine language<span class="ff35"> program</span></div><div class="t m0 x8a h67 y784 ff39 fs2c fc0 sc0 ls0 ws0">(executable file - binary)</div><div class="t m0 x105 h64 y785 ff35 fs2a fc0 sc0 ls0 ws0">Linker (<span class="ff36">e.g.</span> <span class="ff37">ld</span>)</div><div class="t m0 xd h65 y786 ff38 fs2b fc2 sc0 ls0 ws0">01010101</div><div class="t m0 xd h65 y787 ff38 fs2b fc2 sc0 ls0 ws0">10001001</div></div><div class="t m0 x67 h7 y788 ff3 fs4 fc0 sc0 ls0 ws0">Figure<span class="_ _2"> </span>3.1:<span class="_ _3"> </span>Native<span class="_ _2"> </span>code<span class="_ _2"> </span>generation<span class="_ _2"> </span>ﬂow.</div><div class="t m0 x17 h7 y789 ff3 fs4 fc0 sc0 ls0 ws0">sense<span class="_ _30"> </span>that it<span class="_ _30"> </span>is<span class="_ _2f"> </span>encoded in<span class="_ _30"> </span>binary<span class="_ _2f"> </span>and<span class="_ _30"> </span>contains<span class="_ _30"> </span>co<span class="_ _4"></span>de<span class="_ _30"> </span>in mac<span class="_ _8"></span>hine<span class="_ _2f"> </span>language.<span class="_ _b"> </span>Nonetheless,</div><div class="t m0 x17 h7 y78a ff3 fs4 fc0 sc0 ls0 ws0">it<span class="_ _2"> </span>con<span class="_ _1"></span>tains<span class="_ _2"> </span>all<span class="_ _2"> </span>the<span class="_ _2"> </span>required<span class="_ _2"> </span>elemen<span class="_ _1"></span>ts<span class="_ _2"> </span>(<span class="ff8">e.g.</span>,<span class="_ _2"> </span>libraries)<span class="_ _2"> </span>for<span class="_ _2"> </span>execution.</div><div class="t m0 x13 h7 y78b ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _b"> </span>following<span class="_ _b"> </span>command<span class="_ _b"> </span>line<span class="_ _b"> </span>illustrates<span class="_ _b"> </span>how<span class="_ _b"> </span>the<span class="_ _b"> </span><span class="ff5">riscv64-unknown-elf-ld<span class="_ _3"> </span></span>tool,</div><div class="t m0 x17 h7 y78c ff3 fs4 fc0 sc0 ls0 ws0">a<span class="_ _5"> </span>version<span class="_ _5"> </span>of<span class="_ _2"> </span>the<span class="_ _2"> </span>GNU<span class="_ _5"> </span>Linker</div><div class="t m0 x6b h11 y78d ffc fs7 fc0 sc0 ls0 ws0">3</div><div class="t m0 x119 h7 y78c ff3 fs4 fc0 sc0 ls0 ws0">to<span class="_ _4"></span>ol<span class="_ _5"> </span>that<span class="_ _5"> </span>links<span class="_ _2"> </span>ob<span class="_ _4"></span>ject<span class="_ _2"> </span>ﬁles<span class="_ _2"> </span>generated<span class="_ _2"> </span>for<span class="_ _5"> </span>RISC-V<span class="_ _2"> </span>ISAs,</div><div class="t m0 x17 h7 y78e ff3 fs4 fc0 sc0 ls0 ws0">can b<span class="_ _4"></span>e<span class="_ _5"> </span>in<span class="_ _1"></span>v<span class="_ _1"></span>ok<span class="_ _1"></span>ed to<span class="_ _5"> </span>link<span class="_ _5"> </span>tw<span class="_ _8"></span>o<span class="_ _5"> </span>ob<span class="_ _1d"></span>ject ﬁles<span class="_ _5"> </span>together:<span class="_ _a"> </span>the <span class="ff5">main.o<span class="_ _5"> </span></span>and<span class="_ _5"> </span><span class="ff5">mylib.o<span class="_ _5"> </span></span>ob<span class="_ _1d"></span>ject ﬁles.</div><div class="t m0 x17 h7 y78f ff3 fs4 fc0 sc0 ls0 ws0">In<span class="_ _2"> </span>this<span class="_ _2"> </span>example,<span class="_ _2"> </span>the<span class="_ _2"> </span>link<span class="_ _1"></span>er<span class="_ _2"> </span>will<span class="_ _2"> </span>pro<span class="_ _4"></span>duce<span class="_ _5"> </span>an<span class="_ _2"> </span>executable<span class="_ _2"> </span>ﬁle<span class="_ _2"> </span>named<span class="_ _2"> </span><span class="ff5">main.x</span>.</div><div class="t m0 x17 h8 y790 ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-ld<span class="_ _31"> </span>-m<span class="_ _31"> </span>elf32lriscv<span class="_ _31"> </span>main.o<span class="_ _31"> </span>mylib.o<span class="_ _31"> </span>-o<span class="_ _9"> </span>main.x</div><div class="t m0 x13 h7 y791 ff3 fs4 fc0 sc0 ls0 ws0">Figure<span class="_ _30"> </span>3.1 illustrates<span class="_ _30"> </span>the<span class="_ _2f"> </span>code generation<span class="_ _30"> </span>pro<span class="_ _4"></span>cess<span class="_ _30"> </span>used<span class="_ _2f"> </span>to<span class="_ _30"> </span>pro<span class="_ _4"></span>duce<span class="_ _2f"> </span>a<span class="_ _30"> </span>native<span class="_ _30"> </span>program</div><div class="t m0 x17 h7 y792 ff3 fs4 fc0 sc0 ls0 ws0">executable ﬁle from a C program organized in t<span class="_ _8"></span>wo ﬁles.<span class="_ _3"> </span>First, the t<span class="_ _8"></span>wo C program ﬁles</div><div class="t m0 x17 h7 y793 ff3 fs4 fc0 sc0 ls0 ws0">are translated into assem<span class="_ _8"></span>bly programs by the compiler.<span class="_ _3"> </span>Then, the assembly programs</div><div class="t m0 x17 h7 y794 ff3 fs4 fc0 sc0 ls0 ws0">are<span class="_ _2"> </span>assembled<span class="_ _5"> </span>by<span class="_ _5"> </span>the<span class="_ _2"> </span>assembler,<span class="_ _2"> </span>whic<span class="_ _1"></span>h<span class="_ _2"> </span>pro<span class="_ _4"></span>duces<span class="_ _5"> </span>ob<span class="_ _1d"></span>ject<span class="_ _2"> </span>ﬁles.<span class="_ _a"> </span>Finally<span class="_ _7"></span>,<span class="_ _2"> </span>the<span class="_ _2"> </span>linker<span class="_ _2"> </span>links</div><div class="t m0 x17 h7 y795 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>ob<span class="_ _4"></span>ject<span class="_ _2"> </span>ﬁles<span class="_ _2"> </span>together<span class="_ _2"> </span>pro<span class="_ _4"></span>ducing<span class="_ _5"> </span>an<span class="_ _2"> </span>executable<span class="_ _2"> </span>ﬁle.</div><div class="t m0 x13 h7 y796 ff3 fs4 fc0 sc0 ls0 ws0">Assuming<span class="_ _b"> </span>the<span class="_ _3"> </span>high-level<span class="_ _b"> </span>language<span class="_ _3"> </span>program<span class="_ _b"> </span>ﬁles<span class="_ _3"> </span>are<span class="_ _3"> </span>named<span class="_ _b"> </span><span class="ff5">main.c<span class="_ _3"> </span></span>and<span class="_ _3"> </span><span class="ff5">func.c</span>,</div><div class="t m0 x17 h7 y797 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _5"> </span>following<span class="_ _5"> </span>sequence<span class="_ _2"> </span>of<span class="_ _2"> </span>commands<span class="_ _2"> </span>produce<span class="_ _2"> </span>a<span class="_ _2"> </span>R<span class="_ _7"></span>V32I<span class="_ _5"> </span>executable<span class="_ _2"> </span>ﬁle<span class="_ _5"> </span>named<span class="_ _2"> </span><span class="ff5">main.x</span>.</div><div class="t m0 x17 h8 y798 ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-gcc<span class="_ _31"> </span>-mabi=ilp32<span class="_ _31"> </span>-march=rv32i<span class="_ _31"> </span>-S<span class="_ _31"> </span>main.c<span class="_ _31"> </span>-o<span class="_ _9"> </span>main.s</div><div class="t m0 x17 h8 y799 ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-as<span class="_ _31"> </span>-mabi=ilp32<span class="_ _31"> </span>-march=rv32i<span class="_ _31"> </span>main.s<span class="_ _31"> </span>-o<span class="_ _31"> </span>main.o</div><div class="t m0 x17 h8 y79a ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-gcc<span class="_ _31"> </span>-mabi=ilp32<span class="_ _31"> </span>-march=rv32i<span class="_ _31"> </span>-S<span class="_ _31"> </span>func.c<span class="_ _31"> </span>-o<span class="_ _9"> </span>func.s</div><div class="t m0 x17 h8 y79b ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-as<span class="_ _31"> </span>-mabi=ilp32<span class="_ _31"> </span>-march=rv32i<span class="_ _31"> </span>func.s<span class="_ _31"> </span>-o<span class="_ _31"> </span>func.o</div><div class="t m0 x17 h8 y79c ff5 fs4 fc0 sc0 ls0 ws0">$<span class="_ _9"> </span>riscv64-unknown-elf-ld<span class="_ _31"> </span>-m<span class="_ _31"> </span>elf32lriscv<span class="_ _31"> </span>main.o<span class="_ _31"> </span>func.o<span class="_ _31"> </span>-o<span class="_ _9"> </span>main.x</div><div class="t m0 x17 ha y79d ff7 fs6 fc0 sc0 ls0 ws0">3.1.1<span class="_ _e"> </span>Insp<span class="_ _4"></span>ecting<span class="_ _3"> </span>the<span class="_ _a"> </span>conten<span class="_ _8"></span>ts<span class="_ _a"> </span>of<span class="_ _a"> </span>ob<span class="_ _1d"></span>ject<span class="_ _a"> </span>and<span class="_ _a"> </span>executable<span class="_ _a"> </span>ﬁles</div><div class="t m0 x17 h7 y79e ff3 fs4 fc0 sc0 ls0 ws0">Ob<span class="_ _4"></span>ject and<span class="_ _5"> </span>executable ﬁles<span class="_ _5"> </span>are enco<span class="_ _4"></span>ded as binary<span class="_ _5"> </span>ﬁles,<span class="_ _5"> </span>hence, it<span class="_ _5"> </span>is not<span class="_ _5"> </span>easy to<span class="_ _5"> </span>lo<span class="_ _4"></span>ok at</div><div class="t m0 x17 h7 y79f ff3 fs4 fc0 sc0 ls0 ws0">their conten<span class="_ _8"></span>ts directly<span class="_ _7"></span>.<span class="_ _3"> </span>T<span class="_ _7"></span>o insp<span class="_ _4"></span>ect their con<span class="_ _8"></span>tents, developers usually rely on programs</div><div class="t m0 x17 h7 y7a0 ff3 fs4 fc0 sc0 ls0 ws0">that deco<span class="_ _4"></span>de and translate their<span class="_ _5"> </span>information to<span class="_ _5"> </span>a human-readable represen<span class="_ _1"></span>tation, usu-</div><div class="t m0 x17 h7 y7a1 ff3 fs4 fc0 sc0 ls0 ws0">ally a textual format.<span class="_ _3"> </span>There<span class="_ _5"> </span>are several tools that<span class="_ _5"> </span>can b<span class="_ _4"></span>e used to insp<span class="_ _4"></span>ect the con<span class="_ _8"></span>tents</div><div class="t m0 x17 h7 y7a2 ff3 fs4 fc0 sc0 ls0 ws0">of<span class="_ _b"> </span>ob<span class="_ _4"></span>ject<span class="_ _2"> </span>and<span class="_ _b"> </span>executable<span class="_ _2"> </span>ﬁles.<span class="_ _31"> </span>The<span class="_ _b"> </span><span class="ff5">objdump</span>,<span class="_ _2"> </span><span class="ff5">nm</span>,<span class="_ _b"> </span>and<span class="_ _2"> </span><span class="ff5">readelf<span class="_ _b"> </span></span>tools<span class="_ _b"> </span>are<span class="_ _b"> </span>examples<span class="_ _2"> </span>of</div><div class="t m0 x17 h7 y7a3 ff3 fs4 fc0 sc0 ls0 ws0">to<span class="_ _4"></span>ols that can b<span class="_ _4"></span>e used to<span class="_ _5"> </span>insp<span class="_ _4"></span>ect the conten<span class="_ _8"></span>ts of<span class="_ _5"> </span>ob<span class="_ _4"></span>ject and<span class="_ _5"> </span>executable ﬁles<span class="_ _5"> </span>on Linux-</div><div class="t m0 x17 h7 y7a4 ff3 fs4 fc0 sc0 ls0 ws0">based<span class="_ _2"> </span>systems.<span class="_ _31"> </span>The<span class="_ _b"> </span>follo<span class="_ _8"></span>wing<span class="_ _b"> </span>sections<span class="_ _2"> </span>sho<span class="_ _1"></span>w<span class="_ _2"> </span>several<span class="_ _2"> </span>examples<span class="_ _b"> </span>of<span class="_ _2"> </span>how<span class="_ _2"> </span>these<span class="_ _b"> </span>tools<span class="_ _b"> </span>can</div><div class="t m0 x17 h7 y7a5 ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _4"></span>e<span class="_ _5"> </span>used<span class="_ _2"> </span>to<span class="_ _2"> </span>insp<span class="_ _4"></span>ect<span class="_ _5"> </span>the<span class="_ _2"> </span>conten<span class="_ _8"></span>ts<span class="_ _2"> </span>of<span class="_ _2"> </span>ob<span class="_ _1d"></span>ject<span class="_ _2"> </span>and<span class="_ _2"> </span>executable<span class="_ _2"> </span>ﬁles.</div><div class="t m0 x41 h1e y180 ff12 fse fc0 sc0 ls0 ws0">3</div><div class="t m0 x13 h44 y48 ff28 fsf fc0 sc0 ls0 ws0">https://www.gnu.org/software/binutils/</div><div class="t m0 x42 h7 yc ff5 fs4 fc0 sc0 ls0 ws0">http://riscv-<span class="_ _4"></span>programming.org<span class="_ _2"> </span><span class="ff3">(V<span class="_ _7"></span>ersion:<span class="_ _3"> </span>March<span class="_ _2"> </span>29,<span class="_ _2"> </span>2021)<span class="_ _85"> </span>26</span></div><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",90.709,497.86,null]'><div class="d m1" style="border-style:none;position:absolute;left:366.338000px;bottom:469.742000px;width:78.267000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf27" data-dest-detail='[39,"XYZ",151.306,80.331,null]'><div class="d m1" style="border-style:none;position:absolute;left:259.245000px;bottom:433.538000px;width:6.462000px;height:12.040000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,506.875,null]'><div class="d m1" style="border-style:none;position:absolute;left:480.269000px;bottom:433.538000px;width:18.597000px;height:12.040000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf27" data-dest-detail='[39,"XYZ",136.063,777.001,null]'><div class="d m1" style="border-style:none;position:absolute;left:180.512000px;bottom:362.746000px;width:14.722000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",90.709,413.56,null]'><div class="d m1" style="border-style:none;position:absolute;left:438.034000px;bottom:362.746000px;width:67.529000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://www.gnu.org/software/binutils/"><div class="d m1" style="border-style:none;position:absolute;left:150.310000px;bottom:67.030000px;width:162.891000px;height:11.497000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:187.121000px;bottom:36.395000px;width:148.940000px;height:13.948000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
