<div id="pf65" class="pf w0 h0" data-page-no="65"><div class="pc pc65 w0 h0"><img class="bi x17 y1056 w2 h9b" alt="" src="bg65.png"/><div class="t m0 x17 h7 y147 ff3 fs4 fc0 sc0 ls0 ws0">CHAPTER<span class="_ _2"> </span>8.<span class="_ _19"> </span>IMPLEMENTING<span class="_ _2"> </span>ROUTINES</div><div class="t m0 x17 h7 y1e ff3 fs4 fc0 sc0 ls0 ws0">F<span class="_ _7"></span>or<span class="_ _b"> </span>example,<span class="_ _b"> </span>in<span class="_ _b"> </span>the<span class="_ _b"> </span>following<span class="_ _b"> </span>code,<span class="_ _3"> </span>routine<span class="_ _b"> </span><span class="ff5">fun<span class="_ _b"> </span></span>is<span class="_ _b"> </span>in<span class="_ _8"></span>vok<span class="_ _1"></span>ed<span class="_ _b"> </span>b<span class="_ _1"></span>y<span class="_ _b"> </span>routine<span class="_ _b"> </span><span class="ff5">bar</span>,<span class="_ _b"> </span>which<span class="_ _b"> </span>is</div><div class="t m0 x17 h7 yd4 ff3 fs4 fc0 sc0 ls0 ws0">in<span class="_ _1"></span>v<span class="_ _1"></span>ok<span class="_ _1"></span>ed<span class="_ _b"> </span>by<span class="_ _b"> </span>routine<span class="_ _b"> </span><span class="ff5">main</span>.<span class="_ _26"> </span>Initially<span class="_ _23"></span>,<span class="_ _3"> </span>the<span class="_ _3"> </span><span class="ff5">main<span class="_ _b"> </span></span>routine<span class="_ _b"> </span>is<span class="_ _b"> </span>active.<span class="_ _12"> </span>Then,<span class="_ _3"> </span>it<span class="_ _b"> </span>inv<span class="_ _8"></span>okes<span class="_ _b"> </span>the</div><div class="t m0 x17 h7 yd5 ff5 fs4 fc0 sc0 ls0 ws0">bar<span class="_ _37"> </span><span class="ff3">routine, which also becomes active.<span class="_ _3"> </span>Finally<span class="_ _7"></span>, the <span class="ff5">fun<span class="_ _37"> </span></span>routine is inv<span class="_ _8"></span>oked and it also</span></div><div class="t m0 x17 h7 yfd ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _4"></span>ecomes<span class="_ _5"> </span>active.<span class="_ _3"> </span>At<span class="_ _5"> </span>this<span class="_ _2"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>t,<span class="_ _2"> </span>there<span class="_ _2"> </span>are<span class="_ _2"> </span>three<span class="_ _2"> </span>active<span class="_ _5"> </span>routines<span class="_ _2"> </span>in<span class="_ _2"> </span>the<span class="_ _2"> </span>system.</div><div class="t m0 xd5 h8 y1100 ff24 fs12 fc0 sc0 ls0 ws0">1<span class="_ _16"> </span><span class="ff5 fs4">int<span class="_ _31"> </span>a<span class="_ _31"> </span>=<span class="_ _9"> </span>10;</span></div><div class="t m0 xd5 h38 y1101 ff24 fs12 fc0 sc0 ls0 ws0">2</div><div class="t m0 xd5 h8 y1102 ff24 fs12 fc0 sc0 ls0 ws0">3<span class="_ _16"> </span><span class="ff5 fs4">int<span class="_ _31"> </span>main()</span></div><div class="t m0 xd5 h8 y1103 ff24 fs12 fc0 sc0 ls0 ws0">4<span class="_ _16"> </span><span class="ff5 fs4">{</span></div><div class="t m0 xd5 h8 y1104 ff24 fs12 fc0 sc0 ls0 ws0">5<span class="_ _7a"> </span><span class="ff5 fs4">return<span class="_ _31"> </span>bar()<span class="_ _31"> </span>+<span class="_ _31"> </span>2;</span></div><div class="t m0 xd5 h8 y1105 ff24 fs12 fc0 sc0 ls0 ws0">6<span class="_ _16"> </span><span class="ff5 fs4">}</span></div><div class="t m0 xd5 h8 y1106 ff24 fs12 fc0 sc0 ls0 ws0">7<span class="_ _16"> </span><span class="ff5 fs4">int<span class="_ _31"> </span>bar()</span></div><div class="t m0 xd5 h8 y1107 ff24 fs12 fc0 sc0 ls0 ws0">8<span class="_ _16"> </span><span class="ff5 fs4">{</span></div><div class="t m0 xd5 h8 y1108 ff24 fs12 fc0 sc0 ls0 ws0">9<span class="_ _7a"> </span><span class="ff5 fs4">return<span class="_ _31"> </span>fun()<span class="_ _31"> </span>+<span class="_ _31"> </span>4;</span></div><div class="t m0 x7b h8 y1109 ff24 fs12 fc0 sc0 ls0 ws0">10<span class="_ _16"> </span><span class="ff5 fs4">}</span></div><div class="t m0 x7b h8 y110a ff24 fs12 fc0 sc0 ls0 ws0">11<span class="_ _16"> </span><span class="ff5 fs4">int<span class="_ _31"> </span>fun()</span></div><div class="t m0 x7b h8 y110b ff24 fs12 fc0 sc0 ls0 ws0">12<span class="_ _16"> </span><span class="ff5 fs4">{</span></div><div class="t m0 x7b h8 y110c ff24 fs12 fc0 sc0 ls0 ws0">13<span class="_ _7a"> </span><span class="ff5 fs4">return<span class="_ _31"> </span>a;</span></div><div class="t m0 x7b h8 y110d ff24 fs12 fc0 sc0 ls0 ws0">14<span class="_ _16"> </span><span class="ff5 fs4">}</span></div><div class="t m0 x13 h7 y110e ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _b"> </span>set<span class="_ _b"> </span>of<span class="_ _b"> </span>activ<span class="_ _8"></span>e<span class="_ _b"> </span>routines<span class="_ _b"> </span>increases<span class="_ _b"> </span>whenever<span class="_ _2"> </span>a<span class="_ _b"> </span>routine<span class="_ _b"> </span>is<span class="_ _b"> </span>inv<span class="_ _8"></span>oked<span class="_ _b"> </span>and<span class="_ _2"> </span>decreases</div><div class="t m0 x17 h7 y110f ff3 fs4 fc0 sc0 ls0 ws0">whenev<span class="_ _1"></span>er<span class="_ _5"> </span>a<span class="_ _2"> </span>routine<span class="_ _2"> </span>returns.<span class="_ _a"> </span>Routines<span class="_ _2"> </span>are<span class="_ _5"> </span>activ<span class="_ _8"></span>ated<span class="_ _2"> </span>and<span class="_ _2"> </span>deactiv<span class="_ _8"></span>ated<span class="_ _2"> </span>in<span class="_ _2"> </span>a<span class="_ _5"> </span>last-in-ﬁrst-</div><div class="t m0 x17 h7 y1110 ff3 fs4 fc0 sc0 ls0 ws0">out<span class="_ _5"> </span>fashion,<span class="_ _2"> </span><span class="ff8">i.e.</span>,<span class="_ _2"> </span>the<span class="_ _2"> </span>last<span class="_ _2"> </span>one<span class="_ _5"> </span>to<span class="_ _2"> </span>b<span class="_ _4"></span>e<span class="_ _5"> </span>activ<span class="_ _8"></span>ated<span class="_ _2"> </span>must<span class="_ _5"> </span>b<span class="_ _4"></span>e<span class="_ _5"> </span>the<span class="_ _2"> </span>ﬁrst<span class="_ _5"> </span>one<span class="_ _2"> </span>to<span class="_ _2"> </span>b<span class="_ _4"></span>e<span class="_ _5"> </span>deactiv<span class="_ _8"></span>ated.</div><div class="t m0 x17 h7 y1111 ff3 fs4 fc0 sc0 ls0 ws0">Consequen<span class="_ _1"></span>tly<span class="_ _7"></span>,<span class="_ _b"> </span><span class="ff6">the<span class="_ _3"> </span>most<span class="_ _3"> </span>natural<span class="_ _3"> </span>data<span class="_ _3"> </span>structure<span class="_ _3"> </span>to<span class="_ _a"> </span>k<span class="_ _8"></span>eep<span class="_ _a"> </span>trac<span class="_ _8"></span>k<span class="_ _a"> </span>of<span class="_ _3"> </span>activ<span class="_ _1"></span>e<span class="_ _3"> </span>rou-</span></div><div class="t m0 x17 h7 y1112 ff6 fs4 fc0 sc0 ls0 ws0">tines<span class="_ _b"> </span>is<span class="_ _b"> </span>a<span class="_ _b"> </span>stac<span class="_ _8"></span>k<span class="ff3">.</span></div><div class="t m0 x13 h7 y1113 ff3 fs4 fc0 sc0 ls0 ws0">Routines usually need memory space to store imp<span class="_ _4"></span>ortan<span class="_ _8"></span>t information, such as local</div><div class="t m0 x17 h7 y1114 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _8"></span>ariables,<span class="_ _2"> </span>parameters,<span class="_ _b"> </span>and<span class="_ _2"> </span>the<span class="_ _2"> </span>return<span class="_ _2"> </span>address.<span class="_ _9"> </span>Hence,<span class="_ _b"> </span>whenev<span class="_ _8"></span>er<span class="_ _2"> </span>a<span class="_ _b"> </span>routine<span class="_ _2"> </span>is<span class="_ _2"> </span>inv<span class="_ _8"></span>oked</div><div class="t m0 x17 h7 y1115 ff3 fs4 fc0 sc0 ls0 ws0">(and becomes activ<span class="_ _8"></span>e), the system needs<span class="_ _2f"> </span>to allocate memory<span class="_ _2f"> </span>space to<span class="_ _30"> </span>store information</div><div class="t m0 x17 h7 y1116 ff3 fs4 fc0 sc0 ls0 ws0">related to<span class="_ _5"> </span>the routine.<span class="_ _a"> </span>Once it<span class="_ _5"> </span>returns (is<span class="_ _5"> </span>deactiv<span class="_ _8"></span>ated), all<span class="_ _5"> </span>the<span class="_ _5"> </span>information asso<span class="_ _4"></span>ciated</div><div class="t m0 x17 h7 y1117 ff3 fs4 fc0 sc0 ls0 ws0">with<span class="_ _b"> </span>the<span class="_ _b"> </span>routine<span class="_ _b"> </span>in<span class="_ _8"></span>vocation<span class="_ _b"> </span>is<span class="_ _b"> </span>not<span class="_ _b"> </span>needed<span class="_ _b"> </span>an<span class="_ _1"></span>ymore<span class="_ _b"> </span>and<span class="_ _b"> </span>this<span class="_ _b"> </span>memory<span class="_ _b"> </span>space<span class="_ _b"> </span>m<span class="_ _8"></span>ust<span class="_ _b"> </span>b<span class="_ _4"></span>e</div><div class="t m0 x17 h7 y1118 ff3 fs4 fc0 sc0 ls0 ws0">freed.</div><div class="t m0 x13 h7 y1119 ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _25"> </span><span class="ff6">program<span class="_ _31"> </span>stack<span class="_ _31"> </span>is<span class="_ _31"> </span>a<span class="_ _16"> </span>stac<span class="_ _8"></span>k<span class="_ _16"> </span>data<span class="_ _16"> </span>structure<span class="_ _31"> </span>that<span class="_ _16"> </span>stores<span class="_ _31"> </span>information</span></div><div class="t m0 x17 h7 y111a ff6 fs4 fc0 sc0 ls0 ws0">ab<span class="_ _4"></span>out active routines<span class="ff3">,<span class="_ _2"> </span>such as<span class="_ _5"> </span>lo<span class="_ _4"></span>cal v<span class="_ _8"></span>ariables,<span class="_ _2"> </span>parameters,<span class="_ _5"> </span>and<span class="_ _5"> </span>the<span class="_ _2"> </span>return<span class="_ _5"> </span>address.</span></div><div class="t m0 x17 h7 y111b ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _5"> </span>program<span class="_ _5"> </span>stack is<span class="_ _5"> </span>stored<span class="_ _5"> </span>in<span class="_ _5"> </span>the<span class="_ _5"> </span>main<span class="_ _5"> </span>memory<span class="_ _5"> </span>and,<span class="_ _2"> </span>whenev<span class="_ _8"></span>er<span class="_ _2"> </span>a routine<span class="_ _2"> </span>is inv<span class="_ _8"></span>oked,</div><div class="t m0 x17 h7 yee0 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _b"> </span>information<span class="_ _b"> </span>about<span class="_ _b"> </span>the<span class="_ _b"> </span>routine<span class="_ _b"> </span>is<span class="_ _b"> </span>pushed<span class="_ _b"> </span>on<span class="_ _b"> </span>top<span class="_ _b"> </span>of<span class="_ _b"> </span>the<span class="_ _b"> </span>stack,<span class="_ _b"> </span>whic<span class="_ _8"></span>h<span class="_ _b"> </span>causes<span class="_ _b"> </span>it<span class="_ _b"> </span>to</div><div class="t m0 x17 h7 y111c ff3 fs4 fc0 sc0 ls0 ws0">gro<span class="_ _1"></span>w.<span class="_ _3"> </span>Also,<span class="_ _2f"> </span>whenev<span class="_ _8"></span>er a<span class="_ _30"> </span>routine<span class="_ _30"> </span>returns, the<span class="_ _30"> </span>information about<span class="_ _2f"> </span>the<span class="_ _30"> </span>routine<span class="_ _2f"> </span>is<span class="_ _30"> </span>discarded</div><div class="t m0 x17 h7 y111d ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _1"></span>y<span class="_ _2"> </span>dropping<span class="_ _2"> </span>the<span class="_ _2"> </span>con<span class="_ _1"></span>ten<span class="_ _1"></span>ts<span class="_ _2"> </span>at<span class="_ _2"> </span>the<span class="_ _2"> </span>top<span class="_ _2"> </span>of<span class="_ _2"> </span>the<span class="_ _2"> </span>stac<span class="_ _1"></span>k,<span class="_ _2"> </span>whic<span class="_ _1"></span>h<span class="_ _2"> </span>causes<span class="_ _2"> </span>it<span class="_ _2"> </span>to<span class="_ _2"> </span>shrink.</div><div class="t m0 x13 h7 y111e ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _2"> </span>program<span class="_ _2"> </span>stack<span class="_ _2"> </span>is<span class="_ _2"> </span>allo<span class="_ _4"></span>cated<span class="_ _2"> </span>at<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _2"> </span>space,<span class="_ _2"> </span>which<span class="_ _2"> </span>is<span class="_ _2"> </span>usually<span class="_ _2"> </span>placed<span class="_ _b"> </span>at<span class="_ _5"> </span>the</div><div class="t m0 x17 h7 y111f ff3 fs4 fc0 sc0 ls0 ws0">end (high<span class="_ _5"> </span>addresses)<span class="_ _5"> </span>of<span class="_ _5"> </span>the<span class="_ _5"> </span>memory<span class="_ _7"></span>.<span class="_ _3"> </span>As<span class="_ _5"> </span>a<span class="_ _5"> </span>consequence,<span class="_ _5"> </span>the<span class="_ _5"> </span>program stack must grow</div><div class="t m0 x17 h7 y1120 ff3 fs4 fc0 sc0 ls0 ws0">to<span class="_ _1"></span>w<span class="_ _1"></span>ards<span class="_ _2"> </span>lo<span class="_ _1"></span>w<span class="_ _2"> </span>addresses.</div><div class="t m0 x13 h7 y1121 ff6 fs4 fc0 sc0 ls0 ws0">The<span class="_ _a"> </span>stac<span class="_ _8"></span>k<span class="_ _a"> </span>p<span class="_ _4"></span>oin<span class="_ _1"></span>ter<span class="_ _a"> </span>is<span class="_ _a"> </span>a<span class="_ _a"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _a"> </span>to<span class="_ _a"> </span>the<span class="_ _a"> </span>top<span class="_ _a"> </span>of<span class="_ _a"> </span>the<span class="_ _a"> </span>stac<span class="_ _1"></span>k<span class="ff3">,<span class="_ _b"> </span><span class="ff8">i.e.</span>,<span class="_ _3"> </span>it<span class="_ _b"> </span>stores<span class="_ _b"> </span>the</span></div><div class="t m0 x17 h7 y1122 ff3 fs4 fc0 sc0 ls0 ws0">address<span class="_ _a"> </span>of<span class="_ _25"> </span>the<span class="_ _25"> </span>top<span class="_ _25"> </span>of<span class="_ _25"> </span>the<span class="_ _25"> </span>stack.<span class="_ _1a"> </span>Growing<span class="_ _a"> </span>or<span class="_ _25"> </span>shrinking<span class="_ _25"> </span>the<span class="_ _a"> </span>stack<span class="_ _a"> </span>is<span class="_ _25"> </span>p<span class="_ _4"></span>erformed<span class="_ _a"> </span>by</div><div class="t m0 x17 h7 y1123 ff3 fs4 fc0 sc0 ls0 ws0">adjusting<span class="_ _2"> </span>the<span class="_ _2"> </span>stac<span class="_ _1"></span>k<span class="_ _2"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.</div><div class="t m0 x13 h7 y1124 ff3 fs4 fc0 sc0 ls0 ws0">In<span class="_ _2"> </span>RISC-V,<span class="_ _2"> </span>the<span class="_ _b"> </span><span class="ff6">stac<span class="_ _8"></span>k<span class="_ _b"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _3"> </span>is<span class="_ _b"> </span>stored<span class="_ _b"> </span>by<span class="_ _b"> </span>register<span class="_ _b"> </span><span class="ff5">sp<span class="ff3">.<span class="_ _25"> </span>Also,<span class="_ _2"> </span>in<span class="_ _2"> </span>RISC-V,<span class="_ _b"> </span>the</span></span></span></div><div class="t m0 x17 h7 y1125 ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _2"> </span>gro<span class="_ _1"></span>ws<span class="_ _2"> </span>to<span class="_ _1"></span>w<span class="_ _1"></span>ards<span class="_ _2"> </span>lo<span class="_ _1"></span>w<span class="_ _2"> </span>addresses,<span class="_ _2"> </span>hence,<span class="_ _5"> </span>growing<span class="_ _2"> </span>(or<span class="_ _5"> </span>allo<span class="_ _4"></span>cating<span class="_ _2"> </span>space<span class="_ _2"> </span>on)<span class="_ _2"> </span>the<span class="_ _2"> </span>stac<span class="_ _1"></span>k</div><div class="t m0 x17 h7 y1126 ff3 fs4 fc0 sc0 ls0 ws0">can<span class="_ _a"> </span>b<span class="_ _4"></span>e<span class="_ _3"> </span>p<span class="_ _4"></span>erformed<span class="_ _3"> </span>by<span class="_ _a"> </span>decreasing<span class="_ _a"> </span>the<span class="_ _a"> </span>v<span class="_ _8"></span>alue<span class="_ _a"> </span>of<span class="_ _a"> </span>register<span class="_ _a"> </span><span class="ff5">sp<span class="_ _a"> </span></span>(the<span class="_ _a"> </span>stack<span class="_ _3"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter).<span class="_ _ba"> </span>The</div><div class="t m0 x17 h7 y1127 ff3 fs4 fc0 sc0 ls0 ws0">follo<span class="_ _1"></span>wing co<span class="_ _4"></span>de sho<span class="_ _8"></span>ws<span class="_ _5"> </span>how to push the conten<span class="_ _8"></span>ts of register<span class="_ _5"> </span><span class="ff5">a0<span class="_ _37"> </span></span>into the stac<span class="_ _1"></span>k.<span class="_ _3"> </span>First, the</div><div class="t m0 x17 h7 y1128 ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _b"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _b"> </span>is<span class="_ _3"> </span>decreased<span class="_ _b"> </span>to<span class="_ _b"> </span>allo<span class="_ _4"></span>cate<span class="_ _b"> </span>space<span class="_ _b"> </span>(4<span class="_ _b"> </span>bytes),<span class="_ _b"> </span>then,<span class="_ _3"> </span>the<span class="_ _b"> </span>con<span class="_ _8"></span>tents<span class="_ _b"> </span>of<span class="_ _b"> </span>register</div><div class="t m0 x17 h7 y1129 ff5 fs4 fc0 sc0 ls0 ws0">a0<span class="_ _2"> </span><span class="ff3">(4<span class="_ _2"> </span>b<span class="_ _1"></span>ytes)<span class="_ _2"> </span>are<span class="_ _2"> </span>stored<span class="_ _2"> </span>on<span class="_ _2"> </span>the<span class="_ _2"> </span>top<span class="_ _2"> </span>of<span class="_ _2"> </span>the<span class="_ _2"> </span>program<span class="_ _2"> </span>stac<span class="_ _1"></span>k<span class="_ _2"> </span>using<span class="_ _2"> </span>the<span class="_ _2"> </span><span class="ff5">sw<span class="_ _2"> </span></span>instruction.</span></div><div class="t m0 xd5 h8 y112a ff24 fs12 fc0 sc0 ls0 ws0">1<span class="_ _16"> </span><span class="ff5 fs4">addi<span class="_ _31"> </span>sp,<span class="_ _31"> </span>sp,<span class="_ _9"> </span>-4<span class="_ _82"> </span>#<span class="_ _31"> </span>allocate<span class="_ _31"> </span>stack<span class="_ _31"> </span>space</span></div><div class="t m0 xd5 h8 y112b ff24 fs12 fc0 sc0 ls0 ws0">2<span class="_ _16"> </span><span class="ff5 fs4">sw<span class="_ _3b"> </span>a0,<span class="_ _31"> </span>0(sp)<span class="_ _3b"> </span>#<span class="_ _31"> </span>store<span class="_ _9"> </span>data<span class="_ _31"> </span>into<span class="_ _31"> </span>the<span class="_ _31"> </span>stack</span></div><div class="t m0 x13 h7 y66e ff3 fs4 fc0 sc0 ls0 ws0">Alternativ<span class="_ _1"></span>ely<span class="_ _7"></span>,<span class="_ _25"> </span>shrinking<span class="_ _25"> </span>the<span class="_ _a"> </span>stack<span class="_ _a"> </span>can<span class="_ _a"> </span>b<span class="_ _4"></span>e<span class="_ _a"> </span>p<span class="_ _4"></span>erformed<span class="_ _3"> </span>by<span class="_ _a"> </span>increasing<span class="_ _a"> </span>the<span class="_ _25"> </span>v<span class="_ _8"></span>alue<span class="_ _a"> </span>of</div><div class="t m0 x17 h7 yd1 ff3 fs4 fc0 sc0 ls0 ws0">register<span class="_ _b"> </span><span class="ff5">sp</span>.<span class="_ _9"> </span>The<span class="_ _b"> </span>follo<span class="_ _8"></span>wing<span class="_ _b"> </span>co<span class="_ _4"></span>de<span class="_ _2"> </span>shows<span class="_ _2"> </span>how<span class="_ _2"> </span>to<span class="_ _b"> </span>p<span class="_ _4"></span>op<span class="_ _2"> </span>a<span class="_ _b"> </span>v<span class="_ _7"></span>alue<span class="_ _b"> </span>from<span class="_ _b"> </span>the<span class="_ _2"> </span>top<span class="_ _b"> </span>of<span class="_ _2"> </span>the<span class="_ _b"> </span>stac<span class="_ _1"></span>k</div><div class="t m0 x17 h7 yd2 ff3 fs4 fc0 sc0 ls0 ws0">in<span class="_ _1"></span>to<span class="_ _25"> </span>register<span class="_ _a"> </span><span class="ff5">a0</span>.<span class="_ _2b"> </span>First,<span class="_ _25"> </span>the<span class="_ _25"> </span>v<span class="_ _8"></span>alue<span class="_ _25"> </span>on<span class="_ _25"> </span>the<span class="_ _25"> </span>top<span class="_ _25"> </span>of<span class="_ _25"> </span>the<span class="_ _25"> </span>program<span class="_ _25"> </span>stack<span class="_ _a"> </span>is<span class="_ _25"> </span>loaded<span class="_ _25"> </span>into</div><div class="t m0 x17 h7 yd3 ff3 fs4 fc0 sc0 ls0 ws0">register<span class="_ _5"> </span><span class="ff5">a0<span class="_ _2"> </span></span>(4<span class="_ _5"> </span>bytes) using<span class="_ _2"> </span>the<span class="_ _5"> </span><span class="ff5">lw<span class="_ _2"> </span></span>instruction.<span class="_ _3"> </span>Then,<span class="_ _2"> </span>the<span class="_ _5"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _2"> </span>is<span class="_ _5"> </span>increased<span class="_ _5"> </span>to</div><div class="t m0 x17 h7 y48 ff3 fs4 fc0 sc0 ls0 ws0">deallo<span class="_ _4"></span>cate<span class="_ _5"> </span>the<span class="_ _2"> </span>space<span class="_ _2"> </span>(4<span class="_ _2"> </span>bytes).</div><div class="t m0 x42 h7 yc ff5 fs4 fc0 sc0 ls0 ws0">http://riscv-<span class="_ _4"></span>programming.org<span class="_ _2"> </span><span class="ff3">(V<span class="_ _7"></span>ersion:<span class="_ _3"> </span>March<span class="_ _2"> </span>29,<span class="_ _2"> </span>2021)<span class="_ _85"> </span>88</span></div><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:187.121000px;bottom:36.395000px;width:148.940000px;height:13.948000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
