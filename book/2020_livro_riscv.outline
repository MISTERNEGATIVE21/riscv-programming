<ul><li><a class="l" href="#pfa" data-dest-detail='[10,"XYZ",136.063,771.024,null]'>Glossary</a></li><li><a class="l" href="#pfd" data-dest-detail='[13,"XYZ",90.709,771.024,null]'>Acronyms</a></li><li><a class="l" href="#pfe" data-dest-detail='[14,"XYZ",90.709,575.828,null]'>I Introduction to computer systems and assembly language</a><ul><li><a class="l" href="#pff" data-dest-detail='[15,"XYZ",136.063,771.024,null]'>Execution of programs: a 10,000 ft overview</a><ul><li><a class="l" href="#pff" data-dest-detail='[15,"XYZ",136.063,318.181,null]'>Main components of computers</a><ul><li><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",90.709,526.78,null]'>The main memory</a></li><li><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",90.709,203.754,null]'>The CPU</a></li></ul></li><li><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",136.063,413.737,null]'>Executing program instructions</a></li><li><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",90.709,277.931,null]'>The boot process</a></li></ul></li><li><a class="l" href="#pf13" data-dest-detail='[19,"XYZ",136.063,771.024,null]'>Data representation on modern computers</a><ul><li><a class="l" href="#pf13" data-dest-detail='[19,"XYZ",136.063,489.028,null]'>Numeral Systems and the Positional Notation</a><ul><li><a class="l" href="#pf15" data-dest-detail='[21,"XYZ",136.063,249.956,null]'>Converting numbers between bases</a></li></ul></li><li><a class="l" href="#pf18" data-dest-detail='[24,"XYZ",90.709,445.673,null]'>Representing numbers on computers</a><ul><li><a class="l" href="#pf18" data-dest-detail='[24,"XYZ",90.709,319.406,null]'>Unsigned numbers</a></li><li><a class="l" href="#pf19" data-dest-detail='[25,"XYZ",136.063,513.565,null]'>Signed numbers</a></li><li><a class="l" href="#pf1b" data-dest-detail='[27,"XYZ",136.063,466.169,null]'>Binary arithmetic and Overflow</a></li><li><a class="l" href="#pf1c" data-dest-detail='[28,"XYZ",90.709,127.577,null]'>Integer Overflow</a></li></ul></li><li><a class="l" href="#pf1d" data-dest-detail='[29,"XYZ",136.063,352.732,null]'>Representing text</a></li><li><a class="l" href="#pf1f" data-dest-detail='[31,"XYZ",136.063,771.024,null]'>Organizing data on the memory</a><ul><li><a class="l" href="#pf1f" data-dest-detail='[31,"XYZ",136.063,693.263,null]'>Texts on the main memory</a></li><li><a class="l" href="#pf20" data-dest-detail='[32,"XYZ",90.709,771.024,null]'>Numbers on the main memory</a></li><li><a class="l" href="#pf20" data-dest-detail='[32,"XYZ",90.709,410.678,null]'>Arrays on the main memory</a></li><li><a class="l" href="#pf22" data-dest-detail='[34,"XYZ",90.709,290.227,null]'>Structs on the main memory</a></li></ul></li><li><a class="l" href="#pf23" data-dest-detail='[35,"XYZ",136.063,324.447,null]'>Encoding instructions</a></li></ul></li><li><a class="l" href="#pf25" data-dest-detail='[37,"XYZ",136.063,771.024,null]'>Assembly, object, and executable files</a><ul><li><a class="l" href="#pf25" data-dest-detail='[37,"XYZ",136.063,521.303,null]'>Generating native programs</a><ul><li><a class="l" href="#pf27" data-dest-detail='[39,"XYZ",136.063,205.95,null]'>Inspecting the contents of object and executable files</a></li></ul></li><li><a class="l" href="#pf28" data-dest-detail='[40,"XYZ",90.709,771.024,null]'>Labels, symbols, references, and relocation</a><ul><li><a class="l" href="#pf28" data-dest-detail='[40,"XYZ",90.709,747.243,null]'>Labels and symbols</a></li><li><a class="l" href="#pf29" data-dest-detail='[41,"XYZ",136.063,427.625,null]'>References to labels and relocation</a></li><li><a class="l" href="#pf2b" data-dest-detail='[43,"XYZ",136.063,436.247,null]'>Undefined references</a></li><li><a class="l" href="#pf2c" data-dest-detail='[44,"XYZ",90.709,481.85,null]'>Global vs local symbols</a></li><li><a class="l" href="#pf2d" data-dest-detail='[45,"XYZ",136.063,771.024,null]'>The program entry point</a></li></ul></li><li><a class="l" href="#pf2e" data-dest-detail='[46,"XYZ",90.709,354.18,null]'>Program sections</a></li><li><a class="l" href="#pf31" data-dest-detail='[49,"XYZ",136.063,367.606,null]'>Executable vs object files</a></li></ul></li><li><a class="l" href="#pf32" data-dest-detail='[50,"XYZ",90.709,771.024,null]'>Assembly language</a><ul><li><a class="l" href="#pf34" data-dest-detail='[52,"XYZ",90.709,771.024,null]'>Comments</a></li><li><a class="l" href="#pf34" data-dest-detail='[52,"XYZ",90.709,256.947,null]'>Assembly instructions</a></li><li><a class="l" href="#pf35" data-dest-detail='[53,"XYZ",136.063,490.805,null]'>Immediate values</a></li><li><a class="l" href="#pf35" data-dest-detail='[53,"XYZ",136.063,122.946,null]'>Symbol names</a></li><li><a class="l" href="#pf36" data-dest-detail='[54,"XYZ",90.709,457.375,null]'>Labels</a></li><li><a class="l" href="#pf37" data-dest-detail='[55,"XYZ",136.063,538.311,null]'>The location counter and the assembling process</a></li><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",136.063,506.947,null]'>Assembly directives</a><ul><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",136.063,369.112,null]'>Adding values to the program</a></li><li><a class="l" href="#pf3b" data-dest-detail='[59,"XYZ",136.063,143.928,null]'>The .section directive</a></li><li><a class="l" href="#pf3c" data-dest-detail='[60,"XYZ",90.709,140.956,null]'>Allocating variables on the .bss section</a></li><li><a class="l" href="#pf3d" data-dest-detail='[61,"XYZ",136.063,229.244,null]'>The .set and .equ directives</a></li><li><a class="l" href="#pf3e" data-dest-detail='[62,"XYZ",90.709,669.438,null]'>The .globl directive</a></li><li><a class="l" href="#pf3e" data-dest-detail='[62,"XYZ",90.709,432.936,null]'>The .align directive</a></li></ul></li></ul></li></ul></li><li><a class="l" href="#pf40" data-dest-detail='[64,"XYZ",90.709,555.903,null]'>II User-level programming</a><ul><li><a class="l" href="#pf41" data-dest-detail='[65,"XYZ",136.063,771.024,null]'>Introduction</a></li><li><a class="l" href="#pf42" data-dest-detail='[66,"XYZ",90.709,771.024,null]'>The RV32I ISA</a><ul><li><a class="l" href="#pf43" data-dest-detail='[67,"XYZ",136.063,625.41,null]'>Datatypes and memory organization</a></li><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",90.709,580.535,null]'>RV32I registers</a></li><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",90.709,147.27,null]'>Load/Store architecture</a></li><li><a class="l" href="#pf45" data-dest-detail='[69,"XYZ",136.063,414.21,null]'>Pseudo-instructions</a></li><li><a class="l" href="#pf45" data-dest-detail='[69,"XYZ",136.063,151.324,null]'>Logic, shift, and arithmetic instructions</a><ul><li><a class="l" href="#pf46" data-dest-detail='[70,"XYZ",90.709,771.024,null]'>Instructions syntax and operands</a></li><li><a class="l" href="#pf46" data-dest-detail='[70,"XYZ",90.709,347.482,null]'>Dealing with large immediate values</a></li><li><a class="l" href="#pf47" data-dest-detail='[71,"XYZ",136.063,425.209,null]'>Logic instructions</a></li><li><a class="l" href="#pf48" data-dest-detail='[72,"XYZ",90.709,618.504,null]'>Shift instructions</a></li><li><a class="l" href="#pf4a" data-dest-detail='[74,"XYZ",90.709,113.221,null]'>Arithmetic instructions</a></li></ul></li><li><a class="l" href="#pf4c" data-dest-detail='[76,"XYZ",90.709,676.448,null]'>Data movement instructions</a><ul><li><a class="l" href="#pf4c" data-dest-detail='[76,"XYZ",90.709,224.942,null]'>Load instructions</a></li><li><a class="l" href="#pf50" data-dest-detail='[80,"XYZ",90.709,771.024,null]'>Store instructions</a></li><li><a class="l" href="#pf51" data-dest-detail='[81,"XYZ",136.063,543.032,null]'>Data movement pseudo-instructions</a></li></ul></li><li><a class="l" href="#pf52" data-dest-detail='[82,"XYZ",90.709,493.986,null]'>Control-flow instructions</a><ul><li><a class="l" href="#pf52" data-dest-detail='[82,"XYZ",90.709,237.261,null]'>Conditional control-flow instructions</a></li><li><a class="l" href="#pf54" data-dest-detail='[84,"XYZ",90.709,374.087,null]'>Direct vs indirect control-flow instructions </a></li><li><a class="l" href="#pf55" data-dest-detail='[85,"XYZ",136.063,662.046,null]'>Unconditional control-flow instructions</a></li><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",90.709,270.576,null]'>System Calls</a></li></ul></li><li><a class="l" href="#pf57" data-dest-detail='[87,"XYZ",136.063,472.994,null]'>Conditional set instructions</a></li><li><a class="l" href="#pf58" data-dest-detail='[88,"XYZ",90.709,672.795,null]'>Detecting overflow</a></li><li><a class="l" href="#pf58" data-dest-detail='[88,"XYZ",90.709,217.885,null]'>Arithmetic on multi-word variables</a></li></ul></li><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",90.709,771.024,null]'>Controlling the execution flow</a><ul><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",90.709,543.897,null]'>Conditional statements</a><ul><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",90.709,518.035,null]'>if-then statements</a></li><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",90.709,149.124,null]'>Comparing signed vs unsigned variables</a></li><li><a class="l" href="#pf5b" data-dest-detail='[91,"XYZ",136.063,627.545,null]'>if-then-else statements</a></li><li><a class="l" href="#pf5c" data-dest-detail='[92,"XYZ",90.709,771.024,null]'>Handling non-trivial boolean expressions</a></li><li><a class="l" href="#pf5d" data-dest-detail='[93,"XYZ",136.063,627.658,null]'>Nested if statements</a></li></ul></li><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",90.709,719.597,null]'>Repetition statements</a><ul><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",90.709,640.987,null]'>while loop</a></li><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",90.709,115.56,null]'>do-while loop</a></li><li><a class="l" href="#pf5f" data-dest-detail='[95,"XYZ",136.063,340.399,null]'>for loop</a></li><li><a class="l" href="#pf60" data-dest-detail='[96,"XYZ",90.709,518.191,null]'>Hoisting loop-invariant code</a></li></ul></li><li><a class="l" href="#pf60" data-dest-detail='[96,"XYZ",90.709,122.575,null]'>Invoking and returning from routines</a><ul><li><a class="l" href="#pf61" data-dest-detail='[97,"XYZ",136.063,221.183,null]'>Returning values from functions</a></li></ul></li><li><a class="l" href="#pf62" data-dest-detail='[98,"XYZ",90.709,771.024,null]'>Examples</a><ul><li><a class="l" href="#pf62" data-dest-detail='[98,"XYZ",90.709,748.406,null]'>Searching for the maximum value on an array</a></li></ul></li></ul></li><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",90.709,771.024,null]'>Implementing routines</a><ul><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",90.709,590.965,null]'>The program memory layout</a></li><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",90.709,178.612,null]'>The program stack</a><ul><li><a class="l" href="#pf67" data-dest-detail='[103,"XYZ",136.063,467.294,null]'>Types of stacks</a></li></ul></li><li><a class="l" href="#pf68" data-dest-detail='[104,"XYZ",90.709,710.954,null]'>The ABI and software composition</a></li><li><a class="l" href="#pf68" data-dest-detail='[104,"XYZ",90.709,180.415,null]'>Passing parameters to and returning values from routines</a><ul><li><a class="l" href="#pf68" data-dest-detail='[104,"XYZ",90.709,134.266,null]'>Passing parameters to routines</a></li><li><a class="l" href="#pf6a" data-dest-detail='[106,"XYZ",90.709,394.427,null]'>Returning values from routines</a></li></ul></li><li><a class="l" href="#pf6a" data-dest-detail='[106,"XYZ",90.709,308.961,null]'>Value and reference parameters</a></li><li><a class="l" href="#pf6c" data-dest-detail='[108,"XYZ",90.709,771.024,null]'>Global vs local variables</a><ul><li><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",136.063,771.024,null]'>Allocating local variables on memory</a></li></ul></li><li><a class="l" href="#pf6f" data-dest-detail='[111,"XYZ",136.063,624.977,null]'>Register usage policies</a><ul><li><a class="l" href="#pf70" data-dest-detail='[112,"XYZ",90.709,378.172,null]'>Caller-saved vs Callee-saved registers</a></li><li><a class="l" href="#pf71" data-dest-detail='[113,"XYZ",136.063,683.593,null]'>Saving and restoring the return address</a></li></ul></li><li><a class="l" href="#pf71" data-dest-detail='[113,"XYZ",136.063,202.133,null]'>Stack Frames and the Frame Pointer</a><ul><li><a class="l" href="#pf71" data-dest-detail='[113,"XYZ",136.063,175.912,null]'>Stack Frames</a></li><li><a class="l" href="#pf72" data-dest-detail='[114,"XYZ",90.709,523.394,null]'>The Frame Pointer</a></li><li><a class="l" href="#pf73" data-dest-detail='[115,"XYZ",136.063,271.108,null]'>Keeping the stack pointer aligned</a></li></ul></li><li><a class="l" href="#pf73" data-dest-detail='[115,"XYZ",136.063,122.722,null]'>Implementing RISC-V ilp32 compatible routines</a></li><li><a class="l" href="#pf74" data-dest-detail='[116,"XYZ",90.709,221.529,null]'>Examples</a><ul><li><a class="l" href="#pf74" data-dest-detail='[116,"XYZ",90.709,168.063,null]'>Recursive routines</a></li><li><a class="l" href="#pf75" data-dest-detail='[117,"XYZ",136.063,257.842,null]'>The standard ``C&apos;&apos; library syscall routines</a></li></ul></li></ul></li></ul></li><li><a class="l" href="#pf77" data-dest-detail='[119,"XYZ",136.063,555.903,null]'>III System-level programming</a><ul><li><a class="l" href="#pf78" data-dest-detail='[120,"XYZ",90.709,771.024,null]'>Accessing peripherals</a><ul><li><a class="l" href="#pf78" data-dest-detail='[120,"XYZ",90.709,399.852,null]'>Peripherals</a></li><li><a class="l" href="#pf79" data-dest-detail='[121,"XYZ",136.063,159.451,null]'>Interacting with peripherals</a><ul><li><a class="l" href="#pf7a" data-dest-detail='[122,"XYZ",90.709,386.097,null]'>Port-mapped I/O</a></li><li><a class="l" href="#pf7b" data-dest-detail='[123,"XYZ",136.063,642.719,null]'>Memory-mapped I/O</a></li></ul></li><li><a class="l" href="#pf7c" data-dest-detail='[124,"XYZ",90.709,771.024,null]'>I/O operations on RISC-V</a></li><li><a class="l" href="#pf7d" data-dest-detail='[125,"XYZ",136.063,682.183,null]'>Busy waiting</a></li></ul></li><li><a class="l" href="#pf7f" data-dest-detail='[127,"XYZ",136.063,771.024,null]'>External Interrupts</a><ul><li><a class="l" href="#pf7f" data-dest-detail='[127,"XYZ",136.063,591.858,null]'>Introduction</a><ul><li><a class="l" href="#pf81" data-dest-detail='[129,"XYZ",136.063,771.024,null]'>Polling</a></li></ul></li><li><a class="l" href="#pf81" data-dest-detail='[129,"XYZ",136.063,210.48,null]'>External Interrupts</a><ul><li><a class="l" href="#pf82" data-dest-detail='[130,"XYZ",90.709,250.768,null]'>Detecting external interrupts</a></li><li><a class="l" href="#pf83" data-dest-detail='[131,"XYZ",136.063,386.056,null]'>Invoking the proper interrupt service routine</a></li></ul></li><li><a class="l" href="#pf85" data-dest-detail='[133,"XYZ",136.063,466.195,null]'>Interrupts on RV32I</a><ul><li><a class="l" href="#pf85" data-dest-detail='[133,"XYZ",136.063,330.531,null]'>Control and Status Registers</a></li><li><a class="l" href="#pf86" data-dest-detail='[134,"XYZ",90.709,625.413,null]'>Interrupt related Control and Status Registers</a></li><li><a class="l" href="#pf87" data-dest-detail='[135,"XYZ",136.063,260.441,null]'>Interrupt Handling Flow</a></li><li><a class="l" href="#pf88" data-dest-detail='[136,"XYZ",90.709,302.663,null]'>Implementing an interrupt service routine</a></li><li><a class="l" href="#pf89" data-dest-detail='[137,"XYZ",136.063,208.394,null]'>Setting up the Interrupt Handling Mechanism</a></li></ul></li></ul></li><li><a class="l" href="#pf8c" data-dest-detail='[140,"XYZ",90.709,771.024,null]'>Software Interrupts and Exceptions</a><ul><li><a class="l" href="#pf8c" data-dest-detail='[140,"XYZ",90.709,405.521,null]'>Privilege Levels</a></li><li><a class="l" href="#pf8d" data-dest-detail='[141,"XYZ",136.063,648.162,null]'>Protecting the system</a></li><li><a class="l" href="#pf8d" data-dest-detail='[141,"XYZ",136.063,149.59,null]'>Exceptions</a></li><li><a class="l" href="#pf8e" data-dest-detail='[142,"XYZ",90.709,334.472,null]'>Software Interrupts</a></li><li><a class="l" href="#pf8f" data-dest-detail='[143,"XYZ",136.063,268.414,null]'>Protecting RISC-V systems</a><ul><li><a class="l" href="#pf8f" data-dest-detail='[143,"XYZ",136.063,198.845,null]'>Changing the privilege mode</a></li><li><a class="l" href="#pf90" data-dest-detail='[144,"XYZ",90.709,537.299,null]'>Configuring the exception and software interrupt mechanisms</a></li><li><a class="l" href="#pf90" data-dest-detail='[144,"XYZ",90.709,265.687,null]'>Handling illegal operations</a></li><li><a class="l" href="#pf91" data-dest-detail='[145,"XYZ",136.063,446.304,null]'>Handling system calls</a></li></ul></li></ul></li><li><a class="l" href="#pf93" data-dest-detail='[147,"XYZ",136.063,771.024,null]'>RV32IM ISA reference card</a></li></ul></li></ul>