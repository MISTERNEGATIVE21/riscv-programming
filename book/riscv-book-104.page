<div id="pf68" class="pf w0 h0" data-page-no="68"><div class="pc pc68 w0 h0"><img class="bi x13 y1162 w2 ha6" alt="" src="bg68.png"/><div class="t m0 x13 h7 y15a ff3 fs4 fc0 sc0 ls0 ws0">CHAPTER<span class="_ _2"> </span>8.<span class="_ _22"> </span>IMPLEMENTING<span class="_ _2"> </span>ROUTINES</div><div class="t m0 xd5 h8 yc7b ff24 fs12 fc0 sc0 ls0 ws0">1<span class="_ _1f"> </span><span class="ff5 fs4">lw<span class="_ _40"> </span>a3,<span class="_ _86"> </span>0(sp)<span class="_ _40"> </span>#<span class="_ _e"> </span>retrieve<span class="_ _11"> </span>the<span class="_ _e"> </span>first<span class="_ _e"> </span>value<span class="_ _e"> </span>(SP+0)</span></div><div class="t m0 xd5 h8 yc7c ff24 fs12 fc0 sc0 ls0 ws0">2<span class="_ _1f"> </span><span class="ff5 fs4">lw<span class="_ _40"> </span>a2,<span class="_ _86"> </span>4(sp)<span class="_ _40"> </span>#<span class="_ _e"> </span>retrieve<span class="_ _11"> </span>the<span class="_ _e"> </span>second<span class="_ _e"> </span>value<span class="_ _e"> </span>(SP+4)</span></div><div class="t m0 xd5 h8 yc7d ff24 fs12 fc0 sc0 ls0 ws0">3<span class="_ _1f"> </span><span class="ff5 fs4">lw<span class="_ _40"> </span>a1,<span class="_ _86"> </span>8(sp)<span class="_ _40"> </span>#<span class="_ _e"> </span>retrieve<span class="_ _11"> </span>the<span class="_ _e"> </span>third<span class="_ _e"> </span>value<span class="_ _e"> </span>(SP+8)</span></div><div class="t m0 xd5 h8 yc7e ff24 fs12 fc0 sc0 ls0 ws0">4<span class="_ _1f"> </span><span class="ff5 fs4">lw<span class="_ _40"> </span>a0,<span class="_ _e"> </span>12(sp)<span class="_ _40"> </span>#<span class="_ _11"> </span>retrieve<span class="_ _e"> </span>the<span class="_ _e"> </span>last<span class="_ _e"> </span>value<span class="_ _11"> </span>(SP+12)</span></div><div class="t m0 xd5 h8 y1163 ff24 fs12 fc0 sc0 ls0 ws0">5<span class="_ _1f"> </span><span class="ff5 fs4">addi<span class="_ _e"> </span>sp,<span class="_ _11"> </span>sp,<span class="_ _e"> </span>16<span class="_ _40"> </span>#<span class="_ _e"> </span>deallocate<span class="_ _e"> </span>stack<span class="_ _11"> </span>space<span class="_ _e"> </span>(4<span class="_ _e"> </span>words)</span></div><div class="t m0 x14 h7 y1164 ff3 fs4 fc0 sc0 ls0 ws0">Previous<span class="_ _d"> </span>examples<span class="_ _d"> </span>show<span class="_ _8"></span>ed<span class="_ _a"> </span>ho<span class="_ _1"></span>w<span class="_ _d"> </span>to<span class="_ _d"> </span>p<span class="_ _4"></span>erform<span class="_ _d"> </span>push<span class="_ _d"> </span>and<span class="_ _a"> </span>p<span class="_ _4"></span>op<span class="_ _2"> </span>op<span class="_ _4"></span>erations<span class="_ _d"> </span>on<span class="_ _d"> </span>the<span class="_ _a"> </span>pro-</div><div class="t m0 x13 h7 y1165 ff3 fs4 fc0 sc0 ls0 ws0">gram<span class="_ _3"> </span>stack.<span class="_ _b"> </span>P<span class="_ _1"></span>opping<span class="_ _3"> </span>data<span class="_ _3"> </span>from<span class="_ _3"> </span>the<span class="_ _3"> </span>stack<span class="_ _3"> </span>consists<span class="_ _3"> </span>of<span class="_ _3"> </span>retrieving<span class="_ _3"> </span>the<span class="_ _3"> </span>data<span class="_ _3"> </span>and<span class="_ _c"> </span>then</div><div class="t m0 x13 h7 y1166 ff3 fs4 fc0 sc0 ls0 ws0">deallo<span class="_ _4"></span>cating<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _2"> </span>space,<span class="_ _d"> </span>how<span class="_ _8"></span>ever,<span class="_ _2"> </span>if<span class="_ _2"> </span>the<span class="_ _d"> </span>data<span class="_ _d"> </span>is<span class="_ _2"> </span>not<span class="_ _d"> </span>needed<span class="_ _d"> </span>anymore,<span class="_ _2"> </span>then,<span class="_ _2"> </span>only</div><div class="t m0 x13 h7 y1167 ff3 fs4 fc0 sc0 ls0 ws0">the deallo<span class="_ _4"></span>cation pro<span class="_ _4"></span>cess needs to b<span class="_ _4"></span>e p<span class="_ _4"></span>erformed.<span class="_ _a"> </span>As<span class="_ _5"> </span>we will discuss in sections<span class="_ _5"> </span>8.6 and</div><div class="t m0 x13 h7 y1168 ff3 fs4 fc0 sc0 ls0 ws0">8.4,<span class="_ _d"> </span>allo<span class="_ _4"></span>cating<span class="_ _2"> </span>or<span class="_ _d"> </span>deallo<span class="_ _4"></span>cating<span class="_ _2"> </span>stack<span class="_ _2"> </span>space<span class="_ _d"> </span>without<span class="_ _d"> </span>immediately<span class="_ _d"> </span>storing<span class="_ _d"> </span>or<span class="_ _d"> </span>retrieving</div><div class="t m0 x13 h7 y1169 ff3 fs4 fc0 sc0 ls0 ws0">data<span class="_ _2"> </span>to<span class="_ _2"> </span>or<span class="_ _2"> </span>from<span class="_ _2"> </span>the<span class="_ _2"> </span>stac<span class="_ _1"></span>k<span class="_ _2"> </span>is<span class="_ _2"> </span>useful<span class="_ _2"> </span>in<span class="_ _2"> </span>man<span class="_ _1"></span>y<span class="_ _2"> </span>cases.</div><div class="t m0 x13 h7 y116a ff7 fs4 fc0 sc0 ls0 ws0">Initializing<span class="_ _d"> </span>the<span class="_ _a"> </span>stack<span class="_ _d"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter</div><div class="t m0 x13 h7 y116b ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _5"> </span>stack p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _5"> </span>register<span class="_ _5"> </span>must b<span class="_ _4"></span>e<span class="_ _5"> </span>initialized<span class="_ _5"> </span>to<span class="_ _5"> </span>the<span class="_ _5"> </span>base<span class="_ _5"> </span>of<span class="_ _2"> </span>the<span class="_ _5"> </span>program<span class="_ _5"> </span>stack b<span class="_ _4"></span>efore</div><div class="t m0 x13 h7 y116c ff3 fs4 fc0 sc0 ls0 ws0">executing the<span class="_ _13"> </span>program.<span class="_ _3"> </span>When running<span class="_ _13"> </span>the program<span class="_ _13"> </span>without the<span class="_ _13"> </span>support of an operat-</div><div class="t m0 x13 h7 y116d ff3 fs4 fc0 sc0 ls0 ws0">ing system<span class="_ _12"> </span>(for example, in an<span class="_ _12"> </span>embedded system) the<span class="_ _12"> </span>stack pointer<span class="_ _12"> </span>must<span class="_ _13"> </span>b<span class="_ _4"></span>e<span class="_ _12"> </span>initialized</div><div class="t m0 x13 h7 y116e ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _1"></span>y<span class="_ _2"> </span>the<span class="_ _2"> </span>system<span class="_ _d"> </span>initialization<span class="_ _2"> </span>co<span class="_ _4"></span>de.<span class="_ _c"> </span>On<span class="_ _2"> </span>the<span class="_ _2"> </span>other<span class="_ _d"> </span>hand,<span class="_ _2"> </span>when<span class="_ _2"> </span>running<span class="_ _d"> </span>the<span class="_ _2"> </span>program<span class="_ _2"> </span>on</div><div class="t m0 x13 h7 y116f ff3 fs4 fc0 sc0 ls0 ws0">top<span class="_ _3"> </span>of<span class="_ _a"> </span>an<span class="_ _3"> </span>op<span class="_ _4"></span>erating<span class="_ _a"> </span>system,<span class="_ _c"> </span>the<span class="_ _3"> </span>execution<span class="_ _3"> </span>en<span class="_ _1"></span>vironmen<span class="_ _1"></span>t<span class="_ _3"> </span>(<span class="ff8">e.g.</span>,<span class="_ _3"> </span>the<span class="_ _3"> </span>op<span class="_ _4"></span>erating<span class="_ _a"> </span>system</div><div class="t m0 x13 h7 y1170 ff3 fs4 fc0 sc0 ls0 ws0">k<span class="_ _1"></span>ernel)<span class="_ _3"> </span>usually<span class="_ _c"> </span>initializes<span class="_ _c"> </span>the<span class="_ _c"> </span>stack<span class="_ _3"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _c"> </span>b<span class="_ _4"></span>efore<span class="_ _3"> </span>jumping<span class="_ _c"> </span>to<span class="_ _c"> </span>the<span class="_ _3"> </span>program’s<span class="_ _c"> </span>entry</div><div class="t m0 x13 h7 y1171 ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _4"></span>oin<span class="_ _8"></span>t.</div><div class="t m0 x13 ha y1172 ff6 fs6 fc0 sc0 ls0 ws0">8.2.1<span class="_ _17"> </span>T<span class="_ _8"></span>yp<span class="_ _4"></span>es<span class="_ _c"> </span>of<span class="_ _c"> </span>stac<span class="_ _8"></span>ks</div><div class="t m0 x13 h7 y1173 ff3 fs4 fc0 sc0 ls0 ws0">Program<span class="_ _13"> </span>stac<span class="_ _1"></span>ks<span class="_ _13"> </span>can<span class="_ _13"> </span>b<span class="_ _4"></span>e<span class="_ _12"> </span>classiﬁed as:<span class="_ _a"> </span>full<span class="_ _13"> </span>descending, full<span class="_ _12"> </span>ascending, empty<span class="_ _12"> </span>descending,</div><div class="t m0 x13 h7 y1174 ff3 fs4 fc0 sc0 ls0 ws0">and<span class="_ _2"> </span>empt<span class="_ _1"></span>y<span class="_ _2"> </span>ascending.</div><div class="t m0 x14 h7 y1175 ff3 fs4 fc0 sc0 ls0 ws0">A <span class="ff7">full descending<span class="_ _38"> </span>stack<span class="_ _38"> </span>is a stac<span class="_ _8"></span>k that:<span class="_ _c"> </span>(a) grows<span class="_ _38"> </span>tow<span class="_ _8"></span>ards lo<span class="_ _8"></span>w addresses,</span></div><div class="t m0 x13 h7 y1176 ff7 fs4 fc0 sc0 ls0 ws0">and<span class="_ _2"> </span>(b)<span class="_ _d"> </span>the<span class="_ _2"> </span>stack p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _d"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ts<span class="_ _2"> </span>to<span class="_ _d"> </span>the<span class="_ _2"> </span>last<span class="_ _d"> </span>element pushed<span class="_ _2"> </span>into the<span class="_ _d"> </span>stac<span class="_ _8"></span>k<span class="ff3">.</span></div><div class="t m0 x13 h7 y1177 ff3 fs4 fc0 sc0 ls0 ws0">Pushing<span class="_ _c"> </span>a<span class="_ _c"> </span>v<span class="_ _8"></span>alue<span class="_ _c"> </span>in<span class="_ _8"></span>to<span class="_ _c"> </span>a<span class="_ _c"> </span>full<span class="_ _c"> </span>descending<span class="_ _c"> </span>stack<span class="_ _3"> </span>is<span class="_ _c"> </span>p<span class="_ _4"></span>erformed<span class="_ _c"> </span>b<span class="_ _1"></span>y<span class="_ _c"> </span>decreasing<span class="_ _c"> </span>the<span class="_ _c"> </span>stac<span class="_ _1"></span>k</div><div class="t m0 x13 h7 y1178 ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _4"></span>oin<span class="_ _8"></span>ter and<span class="_ _12"> </span>then storing<span class="_ _13"> </span>the v<span class="_ _7"></span>alue in<span class="_ _8"></span>to the<span class="_ _12"> </span>memory w<span class="_ _1"></span>ord pointed<span class="_ _12"> </span>by<span class="_ _12"> </span>the stac<span class="_ _8"></span>k p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.</div><div class="t m0 x13 h7 y1179 ff3 fs4 fc0 sc0 ls0 ws0">P<span class="_ _1"></span>opping<span class="_ _d"> </span>a<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _d"> </span>from<span class="_ _d"> </span>a<span class="_ _d"> </span>full<span class="_ _d"> </span>descending<span class="_ _d"> </span>stack<span class="_ _2"> </span>is<span class="_ _d"> </span>p<span class="_ _4"></span>erformed<span class="_ _2"> </span>by<span class="_ _2"> </span>ﬁrst<span class="_ _d"> </span>loading<span class="_ _d"> </span>the<span class="_ _2"> </span>v<span class="_ _8"></span>alue</div><div class="t m0 x13 h7 y117a ff3 fs4 fc0 sc0 ls0 ws0">from<span class="_ _a"> </span>the<span class="_ _3"> </span>memory<span class="_ _3"> </span>w<span class="_ _8"></span>ord<span class="_ _3"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ted<span class="_ _3"> </span>by<span class="_ _a"> </span>the<span class="_ _a"> </span>stack<span class="_ _a"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _3"> </span>and<span class="_ _3"> </span>then<span class="_ _a"> </span>increasing<span class="_ _3"> </span>the<span class="_ _a"> </span>stack</div><div class="t m0 x13 h7 y117b ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.</div><div class="t m0 x14 h7 y117c ff3 fs4 fc0 sc0 ls0 ws0">An<span class="_ _d"> </span><span class="ff7">empty<span class="_ _a"> </span>descending<span class="_ _3"> </span>stack<span class="_ _a"> </span>is<span class="_ _3"> </span>a<span class="_ _c"> </span>stac<span class="_ _8"></span>k<span class="_ _c"> </span>that:<span class="_ _1b"> </span>(a)<span class="_ _a"> </span>grows<span class="_ _a"> </span>tow<span class="_ _8"></span>ards<span class="_ _3"> </span>low<span class="_ _a"> </span>ad-</span></div><div class="t m0 x13 h7 y117d ff7 fs4 fc0 sc0 ls0 ws0">dresses,<span class="_ _e"> </span>and<span class="_ _11"> </span>(b)<span class="_ _11"> </span>the<span class="_ _e"> </span>stac<span class="_ _1"></span>k<span class="_ _11"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _11"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ts<span class="_ _e"> </span>to<span class="_ _11"> </span>the<span class="_ _11"> </span>next<span class="_ _11"> </span>av<span class="_ _7"></span>ailable<span class="_ _11"> </span>memory</div><div class="t m0 x13 h7 y117e ff7 fs4 fc0 sc0 ls0 ws0">p<span class="_ _4"></span>osition<span class="ff3">,<span class="_ _d"> </span><span class="ff8">i.e.</span>,<span class="_ _d"> </span>the<span class="_ _d"> </span>memory<span class="_ _d"> </span>p<span class="_ _4"></span>osition<span class="_ _d"> </span>that<span class="_ _d"> </span>must<span class="_ _2"> </span>b<span class="_ _4"></span>e<span class="_ _d"> </span>used<span class="_ _d"> </span>to<span class="_ _d"> </span>store<span class="_ _d"> </span>the<span class="_ _d"> </span>next<span class="_ _a"> </span>item<span class="_ _d"> </span>to<span class="_ _d"> </span>b<span class="_ _4"></span>e</span></div><div class="t m0 x13 h7 y117f ff3 fs4 fc0 sc0 ls0 ws0">pushed<span class="_ _2"> </span>into<span class="_ _5"> </span>the<span class="_ _2"> </span>stack.<span class="_ _c"> </span>Pushing<span class="_ _2"> </span>a<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>into<span class="_ _5"> </span>an<span class="_ _2"> </span>empty<span class="_ _2"> </span>descending<span class="_ _2"> </span>stack<span class="_ _5"> </span>is<span class="_ _2"> </span>p<span class="_ _4"></span>erformed</div><div class="t m0 x13 h7 y1180 ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _1"></span>y<span class="_ _c"> </span>ﬁrst<span class="_ _c"> </span>storing<span class="_ _c"> </span>the<span class="_ _c"> </span>v<span class="_ _7"></span>alue<span class="_ _c"> </span>into<span class="_ _3"> </span>the<span class="_ _c"> </span>memory<span class="_ _c"> </span>word<span class="_ _3"> </span>p<span class="_ _4"></span>oin<span class="_ _1"></span>ted<span class="_ _c"> </span>b<span class="_ _1"></span>y<span class="_ _c"> </span>the<span class="_ _c"> </span>stac<span class="_ _1"></span>k<span class="_ _c"> </span>pointer<span class="_ _3"> </span>(an</div><div class="t m0 x13 h7 y1181 ff3 fs4 fc0 sc0 ls0 ws0">empt<span class="_ _1"></span>y<span class="_ _5"> </span>memory<span class="_ _5"> </span>word),<span class="_ _5"> </span>then<span class="_ _5"> </span>decreasing<span class="_ _5"> </span>the<span class="_ _5"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.<span class="_ _c"> </span>P<span class="_ _8"></span>opping<span class="_ _2"> </span>a<span class="_ _5"> </span>v<span class="_ _8"></span>alue<span class="_ _5"> </span>from<span class="_ _5"> </span>a<span class="_ _2"> </span>full</div><div class="t m0 x13 h7 y1182 ff3 fs4 fc0 sc0 ls0 ws0">descending<span class="_ _d"> </span>stack<span class="_ _d"> </span>is<span class="_ _d"> </span>p<span class="_ _4"></span>erformed<span class="_ _d"> </span>by<span class="_ _d"> </span>ﬁrst<span class="_ _a"> </span>increasing<span class="_ _d"> </span>the<span class="_ _a"> </span>stack<span class="_ _d"> </span>pointer<span class="_ _d"> </span>then<span class="_ _a"> </span>loading<span class="_ _d"> </span>the</div><div class="t m0 x13 h7 y1183 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _2"> </span>the<span class="_ _2"> </span>memory<span class="_ _2"> </span>w<span class="_ _1"></span>ord<span class="_ _2"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ted<span class="_ _2"> </span>by<span class="_ _5"> </span>the<span class="_ _2"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.</div><div class="t m0 x14 h7 y1184 ff3 fs4 fc0 sc0 ls0 ws0">A <span class="ff7">full ascending stac<span class="_ _8"></span>k is a stack that:<span class="_ _c"> </span>(a) grows to<span class="_ _8"></span>wards high addresses,</span></div><div class="t m0 x13 h7 y1185 ff7 fs4 fc0 sc0 ls0 ws0">and<span class="_ _2"> </span>(b)<span class="_ _d"> </span>the<span class="_ _2"> </span>stack p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _d"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ts<span class="_ _2"> </span>to<span class="_ _d"> </span>the<span class="_ _2"> </span>last<span class="_ _d"> </span>element pushed<span class="_ _2"> </span>into the<span class="_ _d"> </span>stac<span class="_ _8"></span>k<span class="ff3">.</span></div><div class="t m0 x13 h7 y1186 ff3 fs4 fc0 sc0 ls0 ws0">Pushing<span class="_ _12"> </span>a v<span class="_ _7"></span>alue in<span class="_ _8"></span>to<span class="_ _13"> </span>a<span class="_ _12"> </span>full ascending<span class="_ _12"> </span>stack<span class="_ _12"> </span>is<span class="_ _13"> </span>performed b<span class="_ _8"></span>y increasing<span class="_ _12"> </span>the<span class="_ _13"> </span>stac<span class="_ _8"></span>k pointer</div><div class="t m0 x13 h7 y1187 ff3 fs4 fc0 sc0 ls0 ws0">and<span class="_ _5"> </span>then<span class="_ _2"> </span>storing<span class="_ _2"> </span>the<span class="_ _5"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>into<span class="_ _5"> </span>the<span class="_ _5"> </span>memory<span class="_ _2"> </span>word<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ted<span class="_ _2"> </span>by the<span class="_ _2"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.<span class="_ _c"> </span>P<span class="_ _1"></span>op-</div><div class="t m0 x13 h7 y1188 ff3 fs4 fc0 sc0 ls0 ws0">ping<span class="_ _2"> </span>a<span class="_ _d"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _d"> </span>a<span class="_ _2"> </span>full<span class="_ _2"> </span>ascending<span class="_ _d"> </span>stack<span class="_ _5"> </span>is<span class="_ _d"> </span>p<span class="_ _4"></span>erformed<span class="_ _2"> </span>b<span class="_ _1"></span>y<span class="_ _2"> </span>ﬁrst<span class="_ _d"> </span>loading<span class="_ _2"> </span>the<span class="_ _d"> </span>v<span class="_ _7"></span>alue<span class="_ _d"> </span>from</div><div class="t m0 x13 h7 y1189 ff3 fs4 fc0 sc0 ls0 ws0">the memory<span class="_ _5"> </span>word pointed b<span class="_ _1"></span>y the<span class="_ _5"> </span>stack pointer and then<span class="_ _5"> </span>decreasing the<span class="_ _5"> </span>stack pointer.</div><div class="t m0 x14 h7 y680 ff3 fs4 fc0 sc0 ls0 ws0">An<span class="_ _d"> </span><span class="ff7">empty<span class="_ _3"> </span>ascending<span class="_ _3"> </span>stack<span class="_ _3"> </span>is<span class="_ _3"> </span>a<span class="_ _c"> </span>stac<span class="_ _8"></span>k<span class="_ _c"> </span>that:<span class="_ _1b"> </span>(a)<span class="_ _3"> </span>grows<span class="_ _3"> </span>to<span class="_ _1"></span>w<span class="_ _8"></span>ards<span class="_ _c"> </span>high<span class="_ _3"> </span>ad-</span></div><div class="t m0 x13 h7 y681 ff7 fs4 fc0 sc0 ls0 ws0">dresses,<span class="_ _e"> </span>and<span class="_ _11"> </span>(b)<span class="_ _11"> </span>the<span class="_ _e"> </span>stac<span class="_ _1"></span>k<span class="_ _11"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter<span class="_ _11"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ts<span class="_ _e"> </span>to<span class="_ _11"> </span>the<span class="_ _11"> </span>next<span class="_ _11"> </span>av<span class="_ _7"></span>ailable<span class="_ _11"> </span>memory</div><div class="t m0 x13 h7 y682 ff7 fs4 fc0 sc0 ls0 ws0">p<span class="_ _4"></span>osition<span class="ff3">,<span class="_ _d"> </span><span class="ff8">i.e.</span>,<span class="_ _d"> </span>the<span class="_ _d"> </span>memory<span class="_ _d"> </span>p<span class="_ _4"></span>osition<span class="_ _d"> </span>that<span class="_ _d"> </span>must<span class="_ _2"> </span>b<span class="_ _4"></span>e<span class="_ _d"> </span>used<span class="_ _d"> </span>to<span class="_ _d"> </span>store<span class="_ _d"> </span>the<span class="_ _d"> </span>next<span class="_ _a"> </span>item<span class="_ _d"> </span>to<span class="_ _d"> </span>b<span class="_ _4"></span>e</span></div><div class="t m0 x13 h7 y683 ff3 fs4 fc0 sc0 ls0 ws0">pushed<span class="_ _d"> </span>into<span class="_ _2"> </span>the<span class="_ _a"> </span>stac<span class="_ _1"></span>k.<span class="_ _1f"> </span>Pushing<span class="_ _d"> </span>a<span class="_ _d"> </span>v<span class="_ _8"></span>alue<span class="_ _a"> </span>in<span class="_ _1"></span>to<span class="_ _d"> </span>an<span class="_ _d"> </span>empty<span class="_ _d"> </span>ascending<span class="_ _d"> </span>stack<span class="_ _2"> </span>is<span class="_ _a"> </span>p<span class="_ _4"></span>erformed</div><div class="t m0 x13 h7 y115 ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _1"></span>y<span class="_ _c"> </span>ﬁrst<span class="_ _c"> </span>storing<span class="_ _c"> </span>the<span class="_ _c"> </span>v<span class="_ _7"></span>alue<span class="_ _c"> </span>into<span class="_ _3"> </span>the<span class="_ _c"> </span>memory<span class="_ _c"> </span>word<span class="_ _3"> </span>p<span class="_ _4"></span>oin<span class="_ _1"></span>ted<span class="_ _c"> </span>b<span class="_ _1"></span>y<span class="_ _c"> </span>the<span class="_ _c"> </span>stac<span class="_ _1"></span>k<span class="_ _c"> </span>pointer<span class="_ _3"> </span>(an</div><div class="t m0 x13 h7 yeb ff3 fs4 fc0 sc0 ls0 ws0">empt<span class="_ _1"></span>y<span class="_ _5"> </span>memory<span class="_ _2"> </span>word),<span class="_ _5"> </span>then<span class="_ _2"> </span>increasing<span class="_ _5"> </span>the<span class="_ _2"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.<span class="_ _c"> </span>Popping a<span class="_ _2"> </span>v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _2"> </span>a<span class="_ _5"> </span>full</div><div class="t m0 x13 h7 yec ff3 fs4 fc0 sc0 ls0 ws0">ascending<span class="_ _a"> </span>stack<span class="_ _a"> </span>is<span class="_ _a"> </span>p<span class="_ _4"></span>erformed<span class="_ _a"> </span>by<span class="_ _a"> </span>ﬁrst<span class="_ _3"> </span>decreasing<span class="_ _a"> </span>the<span class="_ _3"> </span>stac<span class="_ _1"></span>k<span class="_ _a"> </span>p<span class="_ _4"></span>oin<span class="_ _1"></span>ter<span class="_ _a"> </span>then<span class="_ _3"> </span>loading<span class="_ _a"> </span>the</div><div class="t m0 x13 h7 y61 ff3 fs4 fc0 sc0 ls0 ws0">v<span class="_ _8"></span>alue<span class="_ _2"> </span>from<span class="_ _2"> </span>the<span class="_ _2"> </span>memory<span class="_ _2"> </span>w<span class="_ _1"></span>ord<span class="_ _2"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ted<span class="_ _2"> </span>by<span class="_ _5"> </span>the<span class="_ _2"> </span>stack<span class="_ _5"> </span>p<span class="_ _4"></span>oin<span class="_ _8"></span>ter.</div><div class="t m0 x44 h7 yc ff5 fs4 fc0 sc0 ls0 ws0">http://riscv-<span class="_ _4"></span>programming.org<span class="_ _2"> </span><span class="ff3">(V<span class="_ _7"></span>ersion:<span class="_ _3"> </span>May<span class="_ _2"> </span>4,<span class="_ _2"> </span>2022)<span class="_ _6a"> </span>90</span></div><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",90.709,771.024,null]'><div class="d m1" style="border-style:none;position:absolute;left:471.915000px;bottom:632.493000px;width:14.723000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf69" data-dest-detail='[105,"XYZ",90.709,180.415,null]'><div class="d m1" style="border-style:none;position:absolute;left:135.067000px;bottom:620.538000px;width:14.722000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:193.915000px;bottom:36.395000px;width:148.940000px;height:13.948000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
